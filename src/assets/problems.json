[
  {
    "name": "Largest 3-Same-Digit Number in String",
    "link": "https://leetcode.com/problems/largest-3-same-digit-number-in-string/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2264.java)"
  },
  {
    "name": "Minimum Consecutive Cards to Pick Up",
    "link": "https://leetcode.com/problems/minimum-consecutive-cards-to-pick-up/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2260.java)"
  },
  {
    "name": "Remove Digit From Number to Maximize Result",
    "link": "https://leetcode.com/problems/remove-digit-from-number-to-maximize-result/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2259.java)"
  },
  {
    "name": "Minimum Average Difference",
    "link": "https://leetcode.com/problems/minimum-average-difference/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2256.java)"
  },
  {
    "name": "Count Prefixes of a Given String",
    "link": "https://leetcode.com/problems/count-prefixes-of-a-given-string/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2255.java)"
  },
  {
    "name": "Intersection of Multiple Arrays",
    "link": "https://leetcode.com/problems/intersection-of-multiple-arrays/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2248.java)"
  },
  {
    "name": "Minimum Rounds to Complete All Tasks",
    "link": "https://leetcode.com/problems/minimum-rounds-to-complete-all-tasks/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2244.java)"
  },
  {
    "name": "Calculate Digit Sum of a String",
    "link": "https://leetcode.com/problems/calculate-digit-sum-of-a-string/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2243.java)"
  },
  {
    "name": "Find Closest Number to Zero",
    "link": "https://leetcode.com/problems/find-closest-number-to-zero/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2239.java)"
  },
  {
    "name": "Root Equals Sum of Children",
    "link": "https://leetcode.com/problems/root-equals-sum-of-children/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2236.java)"
  },
  {
    "name": "Root Equals Sum of Children",
    "link": "https://leetcode.com/problems/root-equals-sum-of-children/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2236.java)"
  },
  {
    "name": "Minimum Bit Flips to Convert Number",
    "link": "https://leetcode.com/problems/minimum-bit-flips-to-convert-number/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2220.java)"
  },
  {
    "name": "Find the Difference of Two Arrays",
    "link": "https://leetcode.com/problems/find-the-difference-of-two-arrays/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2215.java)"
  },
  {
    "name": "Count Hills and Valleys in an Array",
    "link": "https://leetcode.com/problems/count-hills-and-valleys-in-an-array/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2210.java)"
  },
  {
    "name": "Minimum Operations to Halve Array Sum",
    "link": "https://leetcode.com/problems/minimum-operations-to-halve-array-sum/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2208.java)"
  },
  {
    "name": "Divide Array Into Equal Pairs",
    "link": "https://leetcode.com/problems/divide-array-into-equal-pairs/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2206.java)"
  },
  {
    "name": "Count Artifacts That Can Be Extracted",
    "link": "https://leetcode.com/problems/count-artifacts-that-can-be-extracted/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2201.java)"
  },
  {
    "name": "Find All K-Distant Indices in an Array",
    "link": "https://leetcode.com/problems/find-all-k-distant-indices-in-an-array/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2200.java)"
  },
  {
    "name": "Cells in a Range on an Excel Sheet",
    "link": "https://leetcode.com/problems/cells-in-a-range-on-an-excel-sheet/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2194.java)"
  },
  {
    "name": "Most Frequent Number Following Key In an Array",
    "link": "https://leetcode.com/problems/most-frequent-number-following-key-in-an-array/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2190.java)"
  },
  {
    "name": "Minimum Number of Steps to Make Two Strings Anagram II",
    "link": "https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram-ii/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2186.java)"
  },
  {
    "name": "Counting Words With a Given Prefix",
    "link": "https://leetcode.com/problems/counting-words-with-a-given-prefix/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2185.java)"
  },
  {
    "name": "Construct String With Repeat Limit",
    "link": "https://leetcode.com/problems/construct-string-with-repeat-limit/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2182.java)"
  },
  {
    "name": "Merge Nodes in Between Zeros",
    "link": "https://leetcode.com/problems/merge-nodes-in-between-zeros/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2181.java)"
  },
  {
    "name": "Count Integers With Even Digit Sum",
    "link": "https://leetcode.com/problems/count-integers-with-even-digit-sum/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2180.java)"
  },
  {
    "name": "Find Three Consecutive Integers That Sum to a Given Number",
    "link": "https://leetcode.com/problems/find-three-consecutive-integers-that-sum-to-a-given-number/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2177.java)"
  },
  {
    "name": "Count Equal and Divisible Pairs in an Array",
    "link": "https://leetcode.com/problems/count-equal-and-divisible-pairs-in-an-array/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2176.java)"
  },
  {
    "name": "Count Operations to Obtain Zero",
    "link": "https://leetcode.com/problems/count-operations-to-obtain-zero/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2169.java)"
  },
  {
    "name": "Design Bitset",
    "link": "https://leetcode.com/problems/design-bitset/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2166.java)"
  },
  {
    "name": "Smallest Value of the Rearranged Number",
    "link": "https://leetcode.com/problems/smallest-value-of-the-rearranged-number/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2165.java)"
  },
  {
    "name": "Sort Even and Odd Indices Independently",
    "link": "https://leetcode.com/problems/sort-even-and-odd-indices-independently/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2164.java)"
  },
  {
    "name": "Partition Array According to Given Pivot",
    "link": "https://leetcode.com/problems/partition-array-according-to-given-pivot/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2161.java)"
  },
  {
    "name": "Minimum Sum of Four Digit Number After Splitting Digits",
    "link": "https://leetcode.com/problems/minimum-sum-of-four-digit-number-after-splitting-digits/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2160.java)"
  },
  {
    "name": "Find Substring With Given Hash Value",
    "link": "https://leetcode.com/problems/find-substring-with-given-hash-value/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2156.java)"
  },
  {
    "name": "All Divisions With the Highest Score of a Binary Array",
    "link": "https://leetcode.com/problems/all-divisions-with-the-highest-score-of-a-binary-array/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2155.java)"
  },
  {
    "name": "Keep Multiplying Found Values by Two",
    "link": "https://leetcode.com/problems/keep-multiplying-found-values-by-two/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2154.java)"
  },
  {
    "name": "Find All Lonely Numbers in the Array",
    "link": "https://leetcode.com/problems/find-all-lonely-numbers-in-the-array/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2150.java)"
  },
  {
    "name": "Rearrange Array Elements by Sign",
    "link": "https://leetcode.com/problems/rearrange-array-elements-by-sign/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2149.java)"
  },
  {
    "name": "Count Elements With Strictly Smaller and Greater Elements",
    "link": "https://leetcode.com/problems/count-elements-with-strictly-smaller-and-greater-elements/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2148.java)"
  },
  {
    "name": "Minimum Cost of Buying Candies With Discount",
    "link": "https://leetcode.com/problems/minimum-cost-of-buying-candies-with-discount/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2144.java)"
  },
  {
    "name": "Minimum Moves to Reach Target Score",
    "link": "https://leetcode.com/problems/minimum-moves-to-reach-target-score/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2139.java)"
  },
  {
    "name": "Divide a String Into Groups of Size k",
    "link": "https://leetcode.com/problems/divide-a-string-into-groups-of-size-k/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2138.java)"
  },
  {
    "name": "Minimum Swaps to Group All 1's Together II",
    "link": "https://leetcode.com/problems/minimum-swaps-to-group-all-1s-together-ii/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2134.java)"
  },
  {
    "name": "Check if Every Row and Column Contains All Numbers",
    "link": "https://leetcode.com/problems/check-if-every-row-and-column-contains-all-numbers/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2133.java)"
  },
  {
    "name": "Maximum Twin Sum of a Linked List",
    "link": "https://leetcode.com/problems/maximum-twin-sum-of-a-linked-list/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2130.java)"
  },
  {
    "name": "Capitalize the Title",
    "link": "https://leetcode.com/problems/capitalize-the-title/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2129.java)"
  },
  {
    "name": "Destroying Asteroids",
    "link": "https://leetcode.com/problems/destroying-asteroids/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2126.java)"
  },
  {
    "name": "Number of Laser Beams in a Bank",
    "link": "https://leetcode.com/problems/number-of-laser-beams-in-a-bank/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2125.java)"
  },
  {
    "name": "Check if All A's Appears Before All B's",
    "link": "https://leetcode.com/problems/check-if-all-as-appears-before-all-bs/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2124.java)"
  },
  {
    "name": "Execution of All Suffix Instructions Staying in a Grid",
    "link": "https://leetcode.com/problems/execution-of-all-suffix-instructions-staying-in-a-grid/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2120.java)"
  },
  {
    "name": "A Number After a Double Reversal",
    "link": "https://leetcode.com/problems/a-number-after-a-double-reversal/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2119.java)"
  },
  {
    "name": "Check if a Parentheses String Can Be Valid",
    "link": "https://leetcode.com/problems/check-if-a-parentheses-string-can-be-valid/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2116.java)"
  },
  {
    "name": "Maximum Number of Words Found in Sentences",
    "link": "https://leetcode.com/problems/maximum-number-of-words-found-in-sentences/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2114.java)"
  },
  {
    "name": "Number of Smooth Descent Periods of a Stock",
    "link": "https://leetcode.com/problems/number-of-smooth-descent-periods-of-a-stock/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2110.java)"
  },
  {
    "name": "Adding Spaces to a String",
    "link": "https://leetcode.com/problems/adding-spaces-to-a-string/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2109.java)"
  },
  {
    "name": "Find First Palindromic String in the Array",
    "link": "https://leetcode.com/problems/find-first-palindromic-string-in-the-array/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2108.java)"
  },
  {
    "name": "Rings and Rods",
    "link": "https://leetcode.com/problems/rings-and-rods/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2103.java)"
  },
  {
    "name": "Find Subsequence of Length K With the Largest Sum",
    "link": "https://leetcode.com/problems/find-subsequence-of-length-k-with-the-largest-sum/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2099.java)"
  },
  {
    "name": "Delete the Middle Node of a Linked List",
    "link": "https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2095.java)"
  },
  {
    "name": "Finding 3-Digit Even Numbers",
    "link": "https://leetcode.com/problems/finding-3-digit-even-numbers/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2094.java)"
  },
  {
    "name": "Removing Minimum and Maximum From Array",
    "link": "https://leetcode.com/problems/removing-minimum-and-maximum-from-array/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2091.java)"
  },
  {
    "name": "K Radius Subarray Averages",
    "link": "https://leetcode.com/problems/k-radius-subarray-averages/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2090.java)"
  },
  {
    "name": "Find Target Indices After Sorting Array",
    "link": "https://leetcode.com/problems/find-target-indices-after-sorting-array/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2089.java)"
  },
  {
    "name": "Minimum Number of Buckets Required to Collect Rainwater from Houses",
    "link": "https://leetcode.com/problems/minimum-number-of-buckets-required-to-collect-rainwater-from-houses/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2086.java)"
  },
  {
    "name": "Count Common Words With One Occurrence",
    "link": "https://leetcode.com/problems/count-common-words-with-one-occurrence/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2085.java)"
  },
  {
    "name": "Range Frequency Queries",
    "link": "https://leetcode.com/problems/range-frequency-queries/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2080.java)"
  },
  {
    "name": "Watering Plants",
    "link": "https://leetcode.com/problems/watering-plants/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2079.java)"
  },
  {
    "name": "Two Furthest Houses With Different Colors",
    "link": "https://leetcode.com/problems/two-furthest-houses-with-different-colors/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2078.java)"
  },
  {
    "name": "Process Restricted Friend Requests",
    "link": "https://leetcode.com/problems/process-restricted-friend-requests/",
    "difficulty": "Hard",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2076.java)"
  },
  {
    "name": "Decode the Slanted Ciphertext",
    "link": "https://leetcode.com/problems/decode-the-slanted-ciphertext/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2075.java)"
  },
  {
    "name": "Reverse Nodes in Even Length Groups",
    "link": "https://leetcode.com/problems/reverse-nodes-in-even-length-groups/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2074.java)"
  },
  {
    "name": "Time Needed to Buy Tickets",
    "link": "https://leetcode.com/problems/time-needed-to-buy-tickets/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2073.java)"
  },
  {
    "name": "Most Beautiful Item for Each Query",
    "link": "https://leetcode.com/problems/most-beautiful-item-for-each-query/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2070.java)"
  },
  {
    "name": "Check Whether Two Strings are Almost Equivalent",
    "link": "https://leetcode.com/problems/check-whether-two-strings-are-almost-equivalent/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2068.java)"
  },
  {
    "name": "Vowels of All Substrings",
    "link": "https://leetcode.com/problems/vowels-of-all-substrings/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2063.java)"
  },
  {
    "name": "Count Vowel Substrings of a String",
    "link": "https://leetcode.com/problems/count-vowel-substrings-of-a-string/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2062.java)"
  },
  {
    "name": "Find the Minimum and Maximum Number of Nodes Between Critical Points",
    "link": "https://leetcode.com/problems/find-the-minimum-and-maximum-number-of-nodes-between-critical-points/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2058.java)"
  },
  {
    "name": "Smallest Index With Equal Value",
    "link": "https://leetcode.com/problems/smallest-index-with-equal-value/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2057.java)"
  },
  {
    "name": "Plates Between Candles",
    "link": "https://leetcode.com/problems/plates-between-candles/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2055.java)"
  },
  {
    "name": "Two Best Non-Overlapping Events",
    "link": "https://leetcode.com/problems/two-best-non-overlapping-events/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2054.java)"
  },
  {
    "name": "Kth Distinct String in an Array",
    "link": "https://leetcode.com/problems/kth-distinct-string-in-an-array/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2053.java)"
  },
  {
    "name": "Parallel Courses III",
    "link": "https://leetcode.com/problems/parallel-courses-iii/",
    "difficulty": "Hard",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2050.java)"
  },
  {
    "name": "Next Greater Numerically Balanced Number",
    "link": "https://leetcode.com/problems/next-greater-numerically-balanced-number/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2048.java)"
  },
  {
    "name": "Number of Valid Words in a Sentence",
    "link": "https://leetcode.com/problems/number-of-valid-words-in-a-sentence/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2047.java)"
  },
  {
    "name": "Count Number of Maximum Bitwise-OR Subsets",
    "link": "https://leetcode.com/problems/count-number-of-maximum-bitwise-or-subsets/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2044.java)"
  },
  {
    "name": "Simple Bank System",
    "link": "https://leetcode.com/problems/simple-bank-system/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2043.java)"
  },
  {
    "name": "Check if Numbers Are Ascending in a Sentence",
    "link": "https://leetcode.com/problems/check-if-numbers-are-ascending-in-a-sentence/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2042.java)"
  },
  {
    "name": "The Time When the Network Becomes Idle",
    "link": "https://leetcode.com/problems/the-time-when-the-network-becomes-idle/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2039.java)"
  },
  {
    "name": "Remove Colored Pieces if Both Neighbors are the Same Color",
    "link": "https://leetcode.com/problems/remove-colored-pieces-if-both-neighbors-are-the-same-color/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2038.java)"
  },
  {
    "name": "Minimum Number of Moves to Seat Everyone",
    "link": "https://leetcode.com/problems/minimum-number-of-moves-to-seat-everyone/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2037.java)"
  },
  {
    "name": "Stock Price Fluctuation",
    "link": "https://leetcode.com/problems/stock-price-fluctuation/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2034.java)"
  },
  {
    "name": "Minimum Operations to Make a Uni-Value Grid",
    "link": "https://leetcode.com/problems/minimum-operations-to-make-a-uni-value-grid/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2033.java)"
  },
  {
    "name": "Two Out of Three",
    "link": "https://leetcode.com/problems/two-out-of-three/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2032.java)"
  },
  {
    "name": "Find Missing Observations",
    "link": "https://leetcode.com/problems/find-missing-observations/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2028.java)"
  },
  {
    "name": "Minimum Moves to Convert String",
    "link": "https://leetcode.com/problems/minimum-moves-to-convert-string/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2027.java)"
  },
  {
    "name": "Maximize the Confusion of an Exam",
    "link": "https://leetcode.com/problems/maximize-the-confusion-of-an-exam/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2024.java)"
  },
  {
    "name": "Number of Pairs of Strings With Concatenation Equal to Target",
    "link": "https://leetcode.com/problems/number-of-pairs-of-strings-with-concatenation-equal-to-target/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2023.java)"
  },
  {
    "name": "Convert 1D Array Into 2D Array",
    "link": "https://leetcode.com/problems/convert-1d-array-into-2d-array/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2022.java)"
  },
  {
    "name": "Check if Word Can Be Placed In Crossword",
    "link": "https://leetcode.com/problems/check-if-word-can-be-placed-in-crossword/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2018.java)"
  },
  {
    "name": "Grid Game",
    "link": "https://leetcode.com/problems/grid-game/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2017.java)"
  },
  {
    "name": "Maximum Difference Between Increasing Elements",
    "link": "https://leetcode.com/problems/maximum-difference-between-increasing-elements/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2016.java)"
  },
  {
    "name": "Sum of Beauty in the Array",
    "link": "https://leetcode.com/problems/sum-of-beauty-in-the-array/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2012.java)"
  },
  {
    "name": "Final Value of Variable After Performing Operations",
    "link": "https://leetcode.com/problems/final-value-of-variable-after-performing-operations/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2011.java)"
  },
  {
    "name": "Find Original Array From Doubled Array",
    "link": "https://leetcode.com/problems/find-original-array-from-doubled-array/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2007.java)"
  },
  {
    "name": "Count Number of Pairs With Absolute Difference K",
    "link": "https://leetcode.com/problems/count-number-of-pairs-with-absolute-difference-k/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2006.java)"
  },
  {
    "name": "Number of Pairs of Interchangeable Rectangles",
    "link": "https://leetcode.com/problems/number-of-pairs-of-interchangeable-rectangles/",
    "difficulty": "Medium",
    "solution": "[Python3](https://github.com/fishercoder1534/Leetcode/blob/master/python3/2001.py), [Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2001.java)"
  },
  {
    "name": "Reverse Prefix of Word",
    "link": "https://leetcode.com/problems/reverse-prefix-of-word/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2000.java)"
  },
  {
    "name": "The Number of Weak Characters in the Game",
    "link": "https://leetcode.com/problems/the-number-of-weak-characters-in-the-game/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1996.java)"
  },
  {
    "name": "Count Special Quadruplets",
    "link": "https://leetcode.com/problems/count-special-quadruplets/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1995.java)"
  },
  {
    "name": "Find All Groups of Farmland",
    "link": "https://leetcode.com/problems/find-all-groups-of-farmland/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1992.java)"
  },
  {
    "name": "Find the Middle Index in Array",
    "link": "https://leetcode.com/problems/find-the-middle-index-in-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1991.java)"
  },
  {
    "name": "Find the Kth Largest Integer in the Array",
    "link": "https://leetcode.com/problems/find-the-kth-largest-integer-in-the-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1985.java)"
  },
  {
    "name": "Minimum Difference Between Highest and Lowest of K Scores",
    "link": "https://leetcode.com/problems/minimum-difference-between-highest-and-lowest-of-k-scores/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1984.java)"
  },
  {
    "name": "Minimize the Difference Between Target and Chosen Elements",
    "link": "https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1981.java)"
  },
  {
    "name": "Find Unique Binary String",
    "link": "https://leetcode.com/problems/find-unique-binary-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1980.java)"
  },
  {
    "name": "Find Greatest Common Divisor of Array",
    "link": "https://leetcode.com/problems/find-greatest-common-divisor-of-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1979.java)"
  },
  {
    "name": "Minimum Time to Type Word Using Special Typewriter",
    "link": "https://leetcode.com/problems/minimum-time-to-type-word-using-special-typewriter/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1974.java)"
  },
  {
    "name": "Find if Path Exists in Graph",
    "link": "https://leetcode.com/problems/find-if-path-exists-in-graph/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1971.java)"
  },
  {
    "name": "Array With Elements Not Equal to Average of Neighbors",
    "link": "https://leetcode.com/problems/array-with-elements-not-equal-to-average-of-neighbors/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1968.java)"
  },
  {
    "name": "Number of Strings That Appear as Substrings in Word",
    "link": "https://leetcode.com/problems/number-of-strings-that-appear-as-substrings-in-word/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1967.java)"
  },
  {
    "name": "Binary Searchable Numbers in an Unsorted Array",
    "link": "https://leetcode.com/problems/binary-searchable-numbers-in-an-unsorted-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1966.java)"
  },
  {
    "name": "Check If String Is a Prefix of Array",
    "link": "https://leetcode.com/problems/check-if-string-is-a-prefix-of-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1961.java)"
  },
  {
    "name": "Delete Characters to Make Fancy String",
    "link": "https://leetcode.com/problems/delete-characters-to-make-fancy-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1957.java)"
  },
  {
    "name": "Three Divisors",
    "link": "https://leetcode.com/problems/three-divisors/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1952.java)"
  },
  {
    "name": "Sum of Digits of String After Convert",
    "link": "https://leetcode.com/problems/sum-of-digits-of-string-after-convert/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1945.java)"
  },
  {
    "name": "Check if All Characters Have Equal Number of Occurrences",
    "link": "https://leetcode.com/problems/check-if-all-characters-have-equal-number-of-occurrences/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1941.java)"
  },
  {
    "name": "Add Minimum Number of Rungs",
    "link": "https://leetcode.com/problems/add-minimum-number-of-rungs/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1936.java)"
  },
  {
    "name": "Maximum Number of Words You Can Type",
    "link": "https://leetcode.com/problems/maximum-number-of-words-you-can-type/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1935.java)"
  },
  {
    "name": "Check if String Is Decomposable Into Value-Equal Substrings",
    "link": "https://leetcode.com/problems/check-if-string-is-decomposable-into-value-equal-substrings/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1933.java)"
  },
  {
    "name": "Concatenation of Array",
    "link": "https://leetcode.com/problems/concatenation-of-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1929.java)"
  },
  {
    "name": "Nearest Exit from Entrance in Maze",
    "link": "https://leetcode.com/problems/nearest-exit-from-entrance-in-maze/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1926.java)"
  },
  {
    "name": "Count Square Sum Triples",
    "link": "https://leetcode.com/problems/count-square-sum-triples/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1925.java)"
  },
  {
    "name": "Build Array from Permutation",
    "link": "https://leetcode.com/problems/build-array-from-permutation/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1920.java)"
  },
  {
    "name": "Maximum Product Difference Between Two Pairs",
    "link": "https://leetcode.com/problems/maximum-product-difference-between-two-pairs/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1913.java)"
  },
  {
    "name": "Remove All Occurrences of a Substring",
    "link": "https://leetcode.com/problems/remove-all-occurrences-of-a-substring/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1904.java)"
  },
  {
    "name": "Remove One Element to Make the Array Strictly Increasing",
    "link": "https://leetcode.com/problems/remove-one-element-to-make-the-array-strictly-increasing/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1909.java)"
  },
  {
    "name": "The Number of Full Rounds You Have Played",
    "link": "https://leetcode.com/problems/the-number-of-full-rounds-you-have-played/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1904.java)"
  },
  {
    "name": "Largest Odd Number in String",
    "link": "https://leetcode.com/problems/largest-odd-number-in-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1903.java)"
  },
  {
    "name": "Redistribute Characters to Make All Strings Equal",
    "link": "https://leetcode.com/problems/redistribute-characters-to-make-all-strings-equal/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1897.java)"
  },
  {
    "name": "Check if All the Integers in a Range Are Covered",
    "link": "https://leetcode.com/problems/check-if-all-the-integers-in-a-range-are-covered/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1893.java)"
  },
  {
    "name": "Cutting Ribbons",
    "link": "https://leetcode.com/problems/cutting-ribbons/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1891.java)"
  },
  {
    "name": "Determine Whether Matrix Can Be Obtained By Rotation",
    "link": "https://leetcode.com/problems/determine-whether-matrix-can-be-obtained-by-rotation/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1886.java)"
  },
  {
    "name": "Check if Word Equals Summation of Two Words",
    "link": "https://leetcode.com/problems/check-if-word-equals-summation-of-two-words/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1880.java)"
  },
  {
    "name": "Minimize Maximum Pair Sum in Array",
    "link": "https://leetcode.com/problems/minimize-maximum-pair-sum-in-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1877.java)"
  },
  {
    "name": "Substrings of Size Three with Distinct Characters",
    "link": "https://leetcode.com/problems/substrings-of-size-three-with-distinct-characters/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1876.java)"
  },
  {
    "name": "Minimize Product Sum of Two Arrays",
    "link": "https://leetcode.com/problems/minimize-product-sum-of-two-arrays/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1874.java)"
  },
  {
    "name": "Longer Contiguous Segments of Ones than Zeros",
    "link": "https://leetcode.com/problems/longer-contiguous-segments-of-ones-than-zeros/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1869.java)"
  },
  {
    "name": "Sum of All Subset XOR Totals",
    "link": "https://leetcode.com/problems/sum-of-all-subset-xor-totals/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1863.java)"
  },
  {
    "name": "Sum of Floored Pairs",
    "link": "https://leetcode.com/problems/sum-of-floored-pairs/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1862.java)"
  },
  {
    "name": "Rotating the Box",
    "link": "https://leetcode.com/problems/rotating-the-box/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1861.java)"
  },
  {
    "name": "Incremental Memory Leak",
    "link": "https://leetcode.com/problems/incremental-memory-leak/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1860.java)"
  },
  {
    "name": "Sorting the Sentence",
    "link": "https://leetcode.com/problems/sorting-the-sentence/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1859.java)"
  },
  {
    "name": "Maximum Population Year",
    "link": "https://leetcode.com/problems/maximum-population-year/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1854.java)"
  },
  {
    "name": "Minimum Distance to the Target Element",
    "link": "https://leetcode.com/problems/minimum-distance-to-the-target-element/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1848.java)"
  },
  {
    "name": "Seat Reservation Manager",
    "link": "https://leetcode.com/problems/seat-reservation-manager/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1845.java)"
  },
  {
    "name": "Replace All Digits with Characters",
    "link": "https://leetcode.com/problems/replace-all-digits-with-characters/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1844.java)"
  },
  {
    "name": "Sum of Digits in Base K",
    "link": "https://leetcode.com/problems/sum-of-digits-in-base-k/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1837.java)"
  },
  {
    "name": "Remove Duplicates From an Unsorted Linked List",
    "link": "https://leetcode.com/problems/remove-duplicates-from-an-unsorted-linked-list/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1836.java)"
  },
  {
    "name": "Maximum Ice Cream Bars",
    "link": "https://leetcode.com/problems/maximum-ice-cream-bars/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1833.java)"
  },
  {
    "name": "Check if the Sentence Is Pangram",
    "link": "https://leetcode.com/problems/check-if-the-sentence-is-pangram/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1832.java)"
  },
  {
    "name": "Maximum XOR for Each Query",
    "link": "https://leetcode.com/problems/maximum-xor-for-each-query/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1829.java)"
  },
  {
    "name": "Queries on Number of Points Inside a Circle",
    "link": "https://leetcode.com/problems/queries-on-number-of-points-inside-a-circle/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1828.java)"
  },
  {
    "name": "Minimum Operations to Make the Array Increasing",
    "link": "https://leetcode.com/problems/minimum-operations-to-make-the-array-increasing/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1827.java)"
  },
  {
    "name": "Faulty Sensor",
    "link": "https://leetcode.com/problems/faulty-sensor/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1826.java)"
  },
  {
    "name": "Find the Winner of the Circular Game",
    "link": "https://leetcode.com/problems/find-the-winner-of-the-circular-game/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1823.java)"
  },
  {
    "name": "Sign of the Product of an Array",
    "link": "https://leetcode.com/problems/sign-of-the-product-of-an-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1822.java)"
  },
  {
    "name": "Finding the Users Active Minutes",
    "link": "https://leetcode.com/problems/finding-the-users-active-minutes/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1817.java)"
  },
  {
    "name": "Truncate Sentence",
    "link": "https://leetcode.com/problems/truncate-sentence/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1816.java)"
  },
  {
    "name": "Count Nice Pairs in an Array",
    "link": "https://leetcode.com/problems/count-nice-pairs-in-an-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1814.java)"
  },
  {
    "name": "Sentence Similarity III",
    "link": "https://leetcode.com/problems/sentence-similarity-iii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1813.java)"
  },
  {
    "name": "Determine Color of a Chessboard Square",
    "link": "https://leetcode.com/problems/determine-color-of-a-chessboard-square/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1812.java)"
  },
  {
    "name": "Evaluate the Bracket Pairs of a String",
    "link": "https://leetcode.com/problems/evaluate-the-bracket-pairs-of-a-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1807.java)"
  },
  {
    "name": "Minimum Number of Operations to Reinitialize a Permutation",
    "link": "https://leetcode.com/problems/minimum-number-of-operations-to-reinitialize-a-permutation/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1806.java)"
  },
  {
    "name": "Number of Different Integers in a String",
    "link": "https://leetcode.com/problems/number-of-different-integers-in-a-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1805.java)"
  },
  {
    "name": "Implement Trie II (Prefix Tree)",
    "link": "https://leetcode.com/problems/implement-trie-ii-prefix-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1804.java)"
  },
  {
    "name": "Maximum Ascending Subarray Sum",
    "link": "https://leetcode.com/problems/maximum-ascending-subarray-sum/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1800.java)"
  },
  {
    "name": "Design Authentication Manager",
    "link": "https://leetcode.com/problems/design-authentication-manager/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1797.java)"
  },
  {
    "name": "Second Largest Digit in a String",
    "link": "https://leetcode.com/problems/second-largest-digit-in-a-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1796.java)"
  },
  {
    "name": "Maximum Average Pass Ratio",
    "link": "https://leetcode.com/problems/maximum-average-pass-ratio/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1792.java)"
  },
  {
    "name": "Find Center of Star Graph",
    "link": "https://leetcode.com/problems/find-center-of-star-graph/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1791.java)"
  },
  {
    "name": "Check if One String Swap Can Make Strings Equal",
    "link": "https://leetcode.com/problems/check-if-one-string-swap-can-make-strings-equal/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1790.java)"
  },
  {
    "name": "Minimum Elements to Add to Form a Given Sum",
    "link": "https://leetcode.com/problems/minimum-elements-to-add-to-form-a-given-sum/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1785.java)"
  },
  {
    "name": "Check if Binary String Has at Most One Segment of Ones",
    "link": "https://leetcode.com/problems/check-if-binary-string-has-at-most-one-segment-of-ones/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1784.java)"
  },
  {
    "name": "Sum of Beauty of All Substrings",
    "link": "https://leetcode.com/problems/sum-of-beauty-of-all-substrings/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1781.java)"
  },
  {
    "name": "Check if Number is a Sum of Powers of Three",
    "link": "https://leetcode.com/problems/check-if-number-is-a-sum-of-powers-of-three/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1780.java)"
  },
  {
    "name": "Find Nearest Point That Has the Same X or Y Coordinate",
    "link": "https://leetcode.com/problems/find-nearest-point-that-has-the-same-x-or-y-coordinate/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1779.java)"
  },
  {
    "name": "Equal Sum Arrays With Minimum Number of Operations",
    "link": "https://leetcode.com/problems/equal-sum-arrays-with-minimum-number-of-operations/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1775.java)"
  },
  {
    "name": "Closest Dessert Cost",
    "link": "https://leetcode.com/problems/closest-dessert-cost/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1774.java)"
  },
  {
    "name": "Count Items Matching a Rule",
    "link": "https://leetcode.com/problems/count-items-matching-a-rule/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1773.java)"
  },
  {
    "name": "Sort Features by Popularity",
    "link": "https://leetcode.com/problems/sort-features-by-popularity/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1772.java)"
  },
  {
    "name": "Minimum Number of Operations to Move All Balls to Each Box",
    "link": "https://leetcode.com/problems/minimum-number-of-operations-to-move-all-balls-to-each-box/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1769.java)"
  },
  {
    "name": "Merge Strings Alternately",
    "link": "https://leetcode.com/problems/merge-strings-alternately/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1768.java)"
  },
  {
    "name": "Map of Highest Peak",
    "link": "https://leetcode.com/problems/map-of-highest-peak/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1765.java)"
  },
  {
    "name": "Form Array by Concatenating Subarrays of Another Array",
    "link": "https://leetcode.com/problems/form-array-by-concatenating-subarrays-of-another-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1764.java)"
  },
  {
    "name": "Longest Nice Substring",
    "link": "https://leetcode.com/problems/longest-nice-substring/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1763.java)"
  },
  {
    "name": "Count Number of Homogenous Substrings",
    "link": "https://leetcode.com/problems/count-number-of-homogenous-substrings/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1758.java)"
  },
  {
    "name": "Minimum Changes To Make Alternating Binary String",
    "link": "https://leetcode.com/problems/minimum-changes-to-make-alternating-binary-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1758.java)"
  },
  {
    "name": "Design Most Recently Used Queue",
    "link": "https://leetcode.com/problems/design-most-recently-used-queue/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1756.java)"
  },
  {
    "name": "Largest Merge Of Two Strings",
    "link": "https://leetcode.com/problems/largest-merge-of-two-strings/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1753.java)"
  },
  {
    "name": "Maximum Score From Removing Stones",
    "link": "https://leetcode.com/problems/maximum-score-from-removing-stones/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1753.java)"
  },
  {
    "name": "Check if Array Is Sorted and Rotated",
    "link": "https://leetcode.com/problems/check-if-array-is-sorted-and-rotated/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1752.java)"
  },
  {
    "name": "Minimum Length of String After Deleting Similar Ends",
    "link": "https://leetcode.com/problems/minimum-length-of-string-after-deleting-similar-ends/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1750.java)"
  },
  {
    "name": "Maximum Absolute Sum of Any Subarray",
    "link": "https://leetcode.com/problems/maximum-absolute-sum-of-any-subarray/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1749.java)"
  },
  {
    "name": "Sum of Unique Elements",
    "link": "https://leetcode.com/problems/sum-of-unique-elements/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1748.java)"
  },
  {
    "name": "Maximum Subarray Sum After One Operation",
    "link": "https://leetcode.com/problems/maximum-subarray-sum-after-one-operation/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1746.java)"
  },
  {
    "name": "Palindrome Partitioning IV",
    "link": "https://leetcode.com/problems/palindrome-partitioning-iv/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1745.java)"
  },
  {
    "name": "Restore the Array From Adjacent Pairs",
    "link": "https://leetcode.com/problems/restore-the-array-from-adjacent-pairs/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1743.java)"
  },
  {
    "name": "Maximum Number of Balls in a Box",
    "link": "https://leetcode.com/problems/maximum-number-of-balls-in-a-box/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1742.java)"
  },
  {
    "name": "Latest Time by Replacing Hidden Digits",
    "link": "https://leetcode.com/problems/latest-time-by-replacing-hidden-digits/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1736.java)"
  },
  {
    "name": "Minimum Number of People to Teach",
    "link": "https://leetcode.com/problems/minimum-number-of-people-to-teach/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1733.java)"
  },
  {
    "name": "Find the Highest Altitude",
    "link": "https://leetcode.com/problems/find-the-highest-altitude/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1732.java)"
  },
  {
    "name": "Largest Submatrix With Rearrangements",
    "link": "https://leetcode.com/problems/largest-submatrix-with-rearrangements/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1727.java)"
  },
  {
    "name": "Tuple with Same Product",
    "link": "https://leetcode.com/problems/tuple-with-same-product/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1726.java)"
  },
  {
    "name": "Number Of Rectangles That Can Form The Largest Square",
    "link": "https://leetcode.com/problems/number-of-rectangles-that-can-form-the-largest-square/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1725.java)"
  },
  {
    "name": "Swapping Nodes in a Linked List",
    "link": "https://leetcode.com/problems/swapping-nodes-in-a-linked-list/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1721.java)"
  },
  {
    "name": "Decode XORed Array",
    "link": "https://leetcode.com/problems/decode-xored-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1720.java)"
  },
  {
    "name": "Construct the Lexicographically Largest Valid Sequence",
    "link": "https://leetcode.com/problems/construct-the-lexicographically-largest-valid-sequence/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1718.java)"
  },
  {
    "name": "Maximum Score From Removing Substrings",
    "link": "https://leetcode.com/problems/maximum-score-from-removing-substrings/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1717.java)"
  },
  {
    "name": "Calculate Money in Leetcode Bank",
    "link": "https://leetcode.com/problems/calculate-money-in-leetcode-bank/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1716.java)"
  },
  {
    "name": "Count Good Meals",
    "link": "https://leetcode.com/problems/count-good-meals/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1711.java)"
  },
  {
    "name": "Maximum Units on a Truck",
    "link": "https://leetcode.com/problems/maximum-units-on-a-truck/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1710.java)"
  },
  {
    "name": "Largest Subarray Length K",
    "link": "https://leetcode.com/problems/largest-subarray-length-k/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1708.java)"
  },
  {
    "name": "Maximum Number of Eaten Apples",
    "link": "https://leetcode.com/problems/maximum-number-of-eaten-apples/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1705.java)"
  },
  {
    "name": "Determine if String Halves Are Alike",
    "link": "https://leetcode.com/problems/determine-if-string-halves-are-alike/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1704.java)"
  },
  {
    "name": "Number of Students Unable to Eat Lunch",
    "link": "https://leetcode.com/problems/number-of-students-unable-to-eat-lunch/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1700.java)"
  },
  {
    "name": "Maximum Erasure Value",
    "link": "https://leetcode.com/problems/maximum-erasure-value/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1695.java)"
  },
  {
    "name": "Reformat Phone Number",
    "link": "https://leetcode.com/problems/reformat-phone-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1694.java)"
  },
  {
    "name": "Stone Game VII",
    "link": "https://leetcode.com/problems/stone-game-vii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1690.java)"
  },
  {
    "name": "Partitioning Into Minimum Number Of Deci-Binary Numbers",
    "link": "https://leetcode.com/problems/partitioning-into-minimum-number-of-deci-binary-numbers/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1689.java)"
  },
  {
    "name": "Count of Matches in Tournament",
    "link": "https://leetcode.com/problems/count-of-matches-in-tournament/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1688.java)"
  },
  {
    "name": "Stone Game VI",
    "link": "https://leetcode.com/problems/stone-game-vi/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1686.java)"
  },
  {
    "name": "Sum of Absolute Differences in a Sorted Array",
    "link": "https://leetcode.com/problems/sum-of-absolute-differences-in-a-sorted-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1685.java)"
  },
  {
    "name": "Count the Number of Consistent Strings",
    "link": "https://leetcode.com/problems/count-the-number-of-consistent-strings/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1684.java)"
  },
  {
    "name": "Concatenation of Consecutive Binary Numbers",
    "link": "https://leetcode.com/problems/concatenation-of-consecutive-binary-numbers/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1680.java)"
  },
  {
    "name": "Max Number of K-Sum Pairs",
    "link": "https://leetcode.com/problems/max-number-of-k-sum-pairs/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1679.java)"
  },
  {
    "name": "Goal Parser Interpretation",
    "link": "https://leetcode.com/problems/goal-parser-interpretation/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1678.java)"
  },
  {
    "name": "Lowest Common Ancestor of a Binary Tree IV",
    "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1676.java)"
  },
  {
    "name": "Minimize Deviation in Array",
    "link": "https://leetcode.com/problems/minimize-deviation-in-array/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1675.java)"
  },
  {
    "name": "Find the Most Competitive Subsequence",
    "link": "https://leetcode.com/problems/find-the-most-competitive-subsequence/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1673.java)"
  },
  {
    "name": "Richest Customer Wealth",
    "link": "https://leetcode.com/problems/richest-customer-wealth/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1672.java)"
  },
  {
    "name": "Design Front Middle Back Queue",
    "link": "https://leetcode.com/problems/design-front-middle-back-queue/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1670.java)"
  },
  {
    "name": "Merge In Between Linked Lists",
    "link": "https://leetcode.com/problems/merge-in-between-linked-lists/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1669.java)"
  },
  {
    "name": "Maximum Repeating Substring",
    "link": "https://leetcode.com/problems/maximum-repeating-substring/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1668.java)"
  },
  {
    "name": "Ways to Make a Fair Array",
    "link": "https://leetcode.com/problems/ways-to-make-a-fair-array/",
    "difficulty": "Medium",
    "solution": "[Javascript](./javascript/_1664.js)"
  },
  {
    "name": "Smallest String With A Given Numeric Value",
    "link": "https://leetcode.com/problems/smallest-string-with-a-given-numeric-value/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1663.java)"
  },
  {
    "name": "Check If Two String Arrays are Equivalent",
    "link": "https://leetcode.com/problems/check-if-two-string-arrays-are-equivalent/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1662.java)"
  },
  {
    "name": "Minimum Operations to Reduce X to Zero",
    "link": "https://leetcode.com/problems/minimum-operations-to-reduce-x-to-zero/",
    "difficulty": "Medium",
    "solution": "[Javascript](./javascript/_1658.js), [Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1658.java)"
  },
  {
    "name": "Determine if Two Strings Are Close",
    "link": "https://leetcode.com/problems/determine-if-two-strings-are-close/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1657.java)"
  },
  {
    "name": "Design an Ordered Stream",
    "link": "https://leetcode.com/problems/design-an-ordered-stream/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1656.java)"
  },
  {
    "name": "Defuse the Bomb",
    "link": "https://leetcode.com/problems/defuse-the-bomb/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1652.java)"
  },
  {
    "name": "Lowest Common Ancestor of a Binary Tree III",
    "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1650.java)"
  },
  {
    "name": "Get Maximum in Generated Array",
    "link": "https://leetcode.com/problems/get-maximum-in-generated-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1646.java)"
  },
  {
    "name": "Lowest Common Ancestor of a Binary Tree II",
    "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1644.java)"
  },
  {
    "name": "Furthest Building You Can Reach",
    "link": "https://leetcode.com/problems/furthest-building-you-can-reach/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1642.java)"
  },
  {
    "name": "Count Sorted Vowel Strings",
    "link": "https://leetcode.com/problems/count-sorted-vowel-strings/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1641.java)"
  },
  {
    "name": "Check Array Formation Through Concatenation",
    "link": "https://leetcode.com/problems/check-array-formation-through-concatenation/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1640.java)"
  },
  {
    "name": "Widest Vertical Area Between Two Points Containing No Points",
    "link": "https://leetcode.com/problems/widest-vertical-area-between-two-points-containing-no-points/",
    "difficulty": "Medium",
    "solution": "[Javascript](./javascript/_1637.js), [Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1637.java)"
  },
  {
    "name": "Sort Array by Increasing Frequency",
    "link": "https://leetcode.com/problems/sort-array-by-increasing-frequency/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1636.java)"
  },
  {
    "name": "Arithmetic Subarrays",
    "link": "https://leetcode.com/problems/arithmetic-subarrays/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1630.java)"
  },
  {
    "name": "Slowest Key",
    "link": "https://leetcode.com/problems/slowest-key/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1629.java)"
  },
  {
    "name": "Design an Expression Tree With Evaluate Function",
    "link": "https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1628.java)"
  },
  {
    "name": "Best Team With No Conflicts",
    "link": "https://leetcode.com/problems/best-team-with-no-conflicts/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1626.java)"
  },
  {
    "name": "Lexicographically Smallest String After Applying Operations",
    "link": "https://leetcode.com/problems/lexicographically-smallest-string-after-applying-operations/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1625.java)"
  },
  {
    "name": "Largest Substring Between Two Equal Characters",
    "link": "https://leetcode.com/problems/largest-substring-between-two-equal-characters/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1624.java)"
  },
  {
    "name": "Coordinate With Maximum Network Quality",
    "link": "https://leetcode.com/problems/coordinate-with-maximum-network-quality/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1620.java)"
  },
  {
    "name": "Mean of Array After Removing Some Elements",
    "link": "https://leetcode.com/problems/mean-of-array-after-removing-some-elements/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1619.java)"
  },
  {
    "name": "Maximum Nesting Depth of the Parentheses",
    "link": "https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1614.java)"
  },
  {
    "name": "Even Odd Tree",
    "link": "https://leetcode.com/problems/even-odd-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1609.java)"
  },
  {
    "name": "Special Array With X Elements Greater Than or Equal X",
    "link": "https://leetcode.com/problems/special-array-with-x-elements-greater-than-or-equal-x/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1608.java)"
  },
  {
    "name": "Alert Using Same Key-Card Three or More Times in a One Hour Period",
    "link": "https://leetcode.com/problems/alert-using-same-key-card-three-or-more-times-in-a-one-hour-period/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1604.java)"
  },
  {
    "name": "Design Parking System",
    "link": "https://leetcode.com/problems/design-parking-system/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1603.java)"
  },
  {
    "name": "Maximum Number of Achievable Transfer Requests",
    "link": "https://leetcode.com/problems/maximum-number-of-achievable-transfer-requests/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1601.java)"
  },
  {
    "name": "Crawler Log Folder",
    "link": "https://leetcode.com/problems/crawler-log-folder/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1598.java)"
  },
  {
    "name": "Rearrange Spaces Between Words",
    "link": "https://leetcode.com/problems/rearrange-spaces-between-words/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1592.java)"
  },
  {
    "name": "Sum of All Odd Length Subarrays",
    "link": "https://leetcode.com/problems/sum-of-all-odd-length-subarrays/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1588.java)"
  },
  {
    "name": "Count Unhappy Friends",
    "link": "https://leetcode.com/problems/count-unhappy-friends/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1583.java)"
  },
  {
    "name": "Special Positions in a Binary Matrix",
    "link": "https://leetcode.com/problems/special-positions-in-a-binary-matrix/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1582.java)"
  },
  {
    "name": "Number of Ways Where Square of Number Is Equal to Product of Two Numbers",
    "link": "https://leetcode.com/problems/number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1577.java)"
  },
  {
    "name": "Replace All ?'s to Avoid Consecutive Repeating Characters",
    "link": "https://leetcode.com/problems/replace-all-s-to-avoid-consecutive-repeating-characters/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1576.java)"
  },
  {
    "name": "Shortest Subarray to be Removed to Make Array Sorted",
    "link": "https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1574.java)"
  },
  {
    "name": "Matrix Diagonal Sum",
    "link": "https://leetcode.com/problems/matrix-diagonal-sum/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1572.java)"
  },
  {
    "name": "Dot Product of Two Sparse Vectors",
    "link": "https://leetcode.com/problems/dot-product-of-two-sparse-vectors/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1570.java)"
  },
  {
    "name": "Maximum Length of Subarray With Positive Product",
    "link": "https://leetcode.com/problems/maximum-length-of-subarray-with-positive-product/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1567.java)"
  },
  {
    "name": "Detect Pattern of Length M Repeated K or More Times",
    "link": "https://leetcode.com/problems/detect-pattern-of-length-m-repeated-k-or-more-times/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1566.java)"
  },
  {
    "name": "Maximum Number of Coins You Can Get",
    "link": "https://leetcode.com/problems/maximum-number-of-coins-you-can-get/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1561.java)"
  },
  {
    "name": "Most Visited Sector in a Circular Track",
    "link": "https://leetcode.com/problems/most-visited-sector-in-a-circular-track/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1560.java)"
  },
  {
    "name": "Minimum Numbers of Function Calls to Make Target Array",
    "link": "https://leetcode.com/problems/minimum-numbers-of-function-calls-to-make-target-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1558.java)"
  },
  {
    "name": "Minimum Number of Vertices to Reach All Nodes",
    "link": "https://leetcode.com/problems/minimum-number-of-vertices-to-reach-all-nodes/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1557.java)"
  },
  {
    "name": "Thousand Separator",
    "link": "https://leetcode.com/problems/thousand-separator/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1556.java)"
  },
  {
    "name": "Minimum Operations to Make Array Equal",
    "link": "https://leetcode.com/problems/minimum-operations-to-make-array-equal/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1551.java)"
  },
  {
    "name": "Three Consecutive Odds",
    "link": "https://leetcode.com/problems/three-consecutive-odds/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1550.java)"
  },
  {
    "name": "Find Kth Bit in Nth Binary String",
    "link": "https://leetcode.com/problems/find-kth-bit-in-nth-binary-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1545.java)"
  },
  {
    "name": "Make The String Great",
    "link": "https://leetcode.com/problems/make-the-string-great/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1544.java)"
  },
  {
    "name": "Minimum Insertions to Balance a Parentheses String",
    "link": "https://leetcode.com/problems/minimum-insertions-to-balance-a-parentheses-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1541.java)"
  },
  {
    "name": "Kth Missing Positive Number",
    "link": "https://leetcode.com/problems/kth-missing-positive-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1539.java)"
  },
  {
    "name": "Find the Winner of an Array Game",
    "link": "https://leetcode.com/problems/find-the-winner-of-an-array-game/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1535.java)"
  },
  {
    "name": "Count Good Triplets",
    "link": "https://leetcode.com/problems/count-good-triplets/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1534.java)"
  },
  {
    "name": "Shuffle String",
    "link": "https://leetcode.com/problems/shuffle-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1528.java)"
  },
  {
    "name": "Minimum Number of Increments on Subarrays to Form a Target Array",
    "link": "https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1526.java)"
  },
  {
    "name": "Number of Good Ways to Split a String",
    "link": "https://leetcode.com/problems/number-of-good-ways-to-split-a-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1525.java)"
  },
  {
    "name": "Number of Sub-arrays With Odd Sum",
    "link": "https://leetcode.com/problems/number-of-sub-arrays-with-odd-sum/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1524.java)"
  },
  {
    "name": "Count Odd Numbers in an Interval Range",
    "link": "https://leetcode.com/problems/count-odd-numbers-in-an-interval-range/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1523.java)"
  },
  {
    "name": "Water Bottles",
    "link": "https://leetcode.com/problems/water-bottles/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1518.java)"
  },
  {
    "name": "Path with Maximum Probability",
    "link": "https://leetcode.com/problems/path-with-maximum-probability/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1514.java)"
  },
  {
    "name": "Number of Good Pairs",
    "link": "https://leetcode.com/problems/number-of-good-pairs/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1512.java)"
  },
  {
    "name": "Range Sum of Sorted Subarray Sums",
    "link": "https://leetcode.com/problems/range-sum-of-sorted-subarray-sums/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1508.java)"
  },
  {
    "name": "Reformat Date",
    "link": "https://leetcode.com/problems/reformat-date/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1507.java)"
  },
  {
    "name": "Can Make Arithmetic Progression From Sequence",
    "link": "https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1502.java)"
  },
  {
    "name": "Path Crossing",
    "link": "https://leetcode.com/problems/path-crossing/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1496.java)"
  },
  {
    "name": "Longest Subarray of 1's After Deleting One Element",
    "link": "https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1493.java)"
  },
  {
    "name": "The kth Factor of n",
    "link": "https://leetcode.com/problems/the-kth-factor-of-n/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1492.java)"
  },
  {
    "name": "Average Salary Excluding the Minimum and Maximum Salary",
    "link": "https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1491.java)"
  },
  {
    "name": "Clone N-ary Tree",
    "link": "https://leetcode.com/problems/clone-n-ary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1490.java)"
  },
  {
    "name": "Making File Names Unique",
    "link": "https://leetcode.com/problems/making-file-names-unique/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1487.java)"
  },
  {
    "name": "XOR Operation in an Array",
    "link": "https://leetcode.com/problems/xor-operation-in-an-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1486.java)"
  },
  {
    "name": "Clone Binary Tree With Random Pointer",
    "link": "https://leetcode.com/problems/clone-binary-tree-with-random-pointer/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1485.java)"
  },
  {
    "name": "Minimum Number of Days to Make m Bouquets",
    "link": "https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1482.java)"
  },
  {
    "name": "Least Number of Unique Integers after K Removals",
    "link": "https://leetcode.com/problems/least-number-of-unique-integers-after-k-removals/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1481.java)"
  },
  {
    "name": "Running Sum of 1d Array",
    "link": "https://leetcode.com/problems/running-sum-of-1d-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1480.java), [C++](https://github.com/fishercoder1534/Leetcode/blob/master/cpp/_1480.cpp)"
  },
  {
    "name": "Subrectangle Queries",
    "link": "https://leetcode.com/problems/subrectangle-queries/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1476.java)"
  },
  {
    "name": "Final Prices With a Special Discount in a Shop",
    "link": "https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1475.java)"
  },
  {
    "name": "Delete N Nodes After M Nodes of a Linked List",
    "link": "https://leetcode.com/problems/delete-n-nodes-after-m-nodes-of-a-linked-list/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1474.java)"
  },
  {
    "name": "Design Browser History",
    "link": "https://leetcode.com/problems/design-browser-history/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1472.java)"
  },
  {
    "name": "The k Strongest Values in an Array",
    "link": "https://leetcode.com/problems/the-k-strongest-values-in-an-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1471.java)"
  },
  {
    "name": "Shuffle the Array",
    "link": "https://leetcode.com/problems/shuffle-the-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1470.java), [C++](https://github.com/fishercoder1534/Leetcode/blob/master/cpp/_1470.cpp)"
  },
  {
    "name": "Find All The Lonely Nodes",
    "link": "https://leetcode.com/problems/find-all-the-lonely-nodes/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1469.java)"
  },
  {
    "name": "Reorder Routes to Make All Paths Lead to the City Zero",
    "link": "https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1466.java)"
  },
  {
    "name": "Maximum Product of Two Elements in an Array",
    "link": "https://leetcode.com/problems/maximum-product-of-two-elements-in-an-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1464.java)"
  },
  {
    "name": "Check If a String Contains All Binary Codes of Size K",
    "link": "https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1461.java)"
  },
  {
    "name": "Make Two Arrays Equal by Reversing Sub-arrays",
    "link": "https://leetcode.com/problems/make-two-arrays-equal-by-reversing-sub-arrays/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1460.java)"
  },
  {
    "name": "Pseudo-Palindromic Paths in a Binary Tree",
    "link": "https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1457.java)"
  },
  {
    "name": "Maximum Number of Vowels in a Substring of Given Length",
    "link": "https://leetcode.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1456.java)"
  },
  {
    "name": "Check If a Word Occurs As a Prefix of Any Word in a Sentence",
    "link": "https://leetcode.com/problems/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1455.java)"
  },
  {
    "name": "People Whose List of Favorite Companies Is Not a Subset of Another List",
    "link": "https://leetcode.com/problems/people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1452.java)"
  },
  {
    "name": "Rearrange Words in a Sentence",
    "link": "https://leetcode.com/problems/rearrange-words-in-a-sentence/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1451.java)"
  },
  {
    "name": "Number of Students Doing Homework at a Given Time",
    "link": "https://leetcode.com/problems/number-of-students-doing-homework-at-a-given-time/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1450.java)"
  },
  {
    "name": "Count Good Nodes in Binary Tree",
    "link": "https://leetcode.com/problems/count-good-nodes-in-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1448.java)"
  },
  {
    "name": "Simplified Fractions",
    "link": "https://leetcode.com/problems/simplified-fractions/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1447.java)"
  },
  {
    "name": "Consecutive Characters",
    "link": "https://leetcode.com/problems/consecutive-characters/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1446.java)"
  },
  {
    "name": "Build an Array With Stack Operations",
    "link": "https://leetcode.com/problems/build-an-array-with-stack-operations/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1441.java)"
  },
  {
    "name": "Find the Kth Smallest Sum of a Matrix With Sorted Rows",
    "link": "https://leetcode.com/problems/find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1439.java)"
  },
  {
    "name": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
    "link": "https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1438.java)"
  },
  {
    "name": "Check If All 1's Are at Least Length K Places Away",
    "link": "https://leetcode.com/problems/check-if-all-1s-are-at-least-length-k-places-away/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1437.java)"
  },
  {
    "name": "Destination City",
    "link": "https://leetcode.com/problems/destination-city/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1436.java)"
  },
  {
    "name": "Max Difference You Can Get From Changing an Integer",
    "link": "https://leetcode.com/problems/max-difference-you-can-get-from-changing-an-integer/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1432.java)"
  },
  {
    "name": "Kids With the Greatest Number of Candies",
    "link": "https://leetcode.com/problems/kids-with-the-greatest-number-of-candies/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1431.java), [C++](https://github.com/fishercoder1534/Leetcode/blob/master/cpp/_1431.cpp)"
  },
  {
    "name": "First Unique Number",
    "link": "https://leetcode.com/problems/first-unique-number/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1429.java)"
  },
  {
    "name": "Leftmost Column with at Least a One",
    "link": "https://leetcode.com/problems/leftmost-column-with-at-least-a-one/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1428.java)"
  },
  {
    "name": "Perform String Shifts",
    "link": "https://leetcode.com/problems/perform-string-shifts/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1427.java)"
  },
  {
    "name": "Counting Elements",
    "link": "https://leetcode.com/problems/counting-elements/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1426.java)"
  },
  {
    "name": "Maximum Points You Can Obtain from Cards",
    "link": "https://leetcode.com/problems/maximum-points-you-can-obtain-from-cards/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1423.java)"
  },
  {
    "name": "Maximum Score After Splitting a String",
    "link": "https://leetcode.com/problems/maximum-score-after-splitting-a-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1422.java)"
  },
  {
    "name": "Display Table of Food Orders in a Restaurant",
    "link": "https://leetcode.com/problems/display-table-of-food-orders-in-a-restaurant/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1418.java)"
  },
  {
    "name": "Reformat The String",
    "link": "https://leetcode.com/problems/reformat-the-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1417.java)"
  },
  {
    "name": "The k-th Lexicographical String of All Happy Strings of Length n",
    "link": "https://leetcode.com/problems/the-k-th-lexicographical-string-of-all-happy-strings-of-length-n/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1415.java)"
  },
  {
    "name": "Minimum Value to Get Positive Step by Step Sum",
    "link": "https://leetcode.com/problems/minimum-value-to-get-positive-step-by-step-sum/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1413.java)"
  },
  {
    "name": "HTML Entity Parser",
    "link": "https://leetcode.com/problems/html-entity-parser/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1410.java)"
  },
  {
    "name": "Queries on a Permutation With Key",
    "link": "https://leetcode.com/problems/queries-on-a-permutation-with-key/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1409.java)"
  },
  {
    "name": "String Matching in an Array",
    "link": "https://leetcode.com/problems/string-matching-in-an-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1408.java)"
  },
  {
    "name": "Minimum Subsequence in Non-Increasing Order",
    "link": "https://leetcode.com/problems/minimum-subsequence-in-non-increasing-order/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1403.java)"
  },
  {
    "name": "Reducing Dishes",
    "link": "https://leetcode.com/problems/reducing-dishes/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/cpp/_1402.cpp)"
  },
  {
    "name": "Circle and Rectangle Overlapping",
    "link": "https://leetcode.com/problems/circle-and-rectangle-overlapping/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1401.java)"
  },
  {
    "name": "Construct K Palindrome Strings",
    "link": "https://leetcode.com/problems/construct-k-palindrome-strings/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1400.java)"
  },
  {
    "name": "Count Largest Group",
    "link": "https://leetcode.com/problems/count-largest-group/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1399.java)"
  },
  {
    "name": "Design Underground System",
    "link": "https://leetcode.com/problems/design-underground-system/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1396.java)"
  },
  {
    "name": "Count Number of Teams",
    "link": "https://leetcode.com/problems/count-number-of-teams/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1395.java)"
  },
  {
    "name": "Find Lucky Integer in an Array",
    "link": "https://leetcode.com/problems/find-lucky-integer-in-an-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1394.java)"
  },
  {
    "name": "Longest Happy Prefix",
    "link": "https://leetcode.com/problems/longest-happy-prefix/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1392.java)"
  },
  {
    "name": "Four Divisors",
    "link": "https://leetcode.com/problems/four-divisors/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1390.java)"
  },
  {
    "name": "Create Target Array in the Given Order",
    "link": "https://leetcode.com/problems/create-target-array-in-the-given-order/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1389.java)"
  },
  {
    "name": "Pizza With 3n Slices",
    "link": "https://leetcode.com/problems/pizza-with-3n-slices/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1388.java)"
  },
  {
    "name": "Sort Integers by The Power Value",
    "link": "https://leetcode.com/problems/sort-integers-by-the-power-value/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1387.java)"
  },
  {
    "name": "Cinema Seat Allocation",
    "link": "https://leetcode.com/problems/cinema-seat-allocation/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1386.java)"
  },
  {
    "name": "Find the Distance Value Between Two Arrays",
    "link": "https://leetcode.com/problems/find-the-distance-value-between-two-arrays/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1385.java)"
  },
  {
    "name": "Balance a Binary Search Tree",
    "link": "https://leetcode.com/problems/balance-a-binary-search-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1382.java)"
  },
  {
    "name": "Design a Stack With Increment Operation",
    "link": "https://leetcode.com/problems/design-a-stack-with-increment-operation/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1381.java)"
  },
  {
    "name": "Lucky Numbers in a Matrix",
    "link": "https://leetcode.com/problems/lucky-numbers-in-a-matrix/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1380.java)"
  },
  {
    "name": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree",
    "link": "https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1379.java)"
  },
  {
    "name": "Frog Position After T Seconds",
    "link": "https://leetcode.com/problems/frog-position-after-t-seconds/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1377.java)"
  },
  {
    "name": "Time Needed to Inform All Employees",
    "link": "https://leetcode.com/problems/time-needed-to-inform-all-employees/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1376.java)"
  },
  {
    "name": "Bulb Switcher III",
    "link": "https://leetcode.com/problems/bulb-switcher-iii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1375.java)"
  },
  {
    "name": "Generate a String With Characters That Have Odd Counts",
    "link": "https://leetcode.com/problems/generate-a-string-with-characters-that-have-odd-counts/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1374.java)"
  },
  {
    "name": "Maximum Sum BST in Binary Tree",
    "link": "https://leetcode.com/problems/maximum-sum-bst-in-binary-tree/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1373.java)"
  },
  {
    "name": "Longest ZigZag Path in a Binary Tree",
    "link": "https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1372.java)"
  },
  {
    "name": "Find the Longest Substring Containing Vowels in Even Counts",
    "link": "https://leetcode.com/problems/find-the-longest-substring-containing-vowels-in-even-counts/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1371.java)"
  },
  {
    "name": "Increasing Decreasing String",
    "link": "https://leetcode.com/problems/increasing-decreasing-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1370.java)"
  },
  {
    "name": "Linked List in Binary Tree",
    "link": "https://leetcode.com/problems/linked-list-in-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1367.java)"
  },
  {
    "name": "Rank Teams by Votes",
    "link": "https://leetcode.com/problems/rank-teams-by-votes/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1366.java)"
  },
  {
    "name": "How Many Numbers Are Smaller Than the Current Number",
    "link": "https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1365.java)"
  },
  {
    "name": "Closest Divisors",
    "link": "https://leetcode.com/problems/closest-divisors/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1362.java)"
  },
  {
    "name": "Validate Binary Tree Nodes",
    "link": "https://leetcode.com/problems/validate-binary-tree-nodes/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1361.java)"
  },
  {
    "name": "Number of Days Between Two Dates",
    "link": "https://leetcode.com/problems/number-of-days-between-two-dates/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1360.java)"
  },
  {
    "name": "Number of Substrings Containing All Three Characters",
    "link": "https://leetcode.com/problems/number-of-substrings-containing-all-three-characters/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1358.java)"
  },
  {
    "name": "Apply Discount Every n Orders",
    "link": "https://leetcode.com/problems/apply-discount-every-n-orders/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1357.java)"
  },
  {
    "name": "Sort Integers by The Number of 1 Bits",
    "link": "https://leetcode.com/problems/sort-integers-by-the-number-of-1-bits/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1356.java)"
  },
  {
    "name": "Construct Target Array With Multiple Sums",
    "link": "https://leetcode.com/problems/construct-target-array-with-multiple-sums/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1354.java)"
  },
  {
    "name": "Maximum Number of Events That Can Be Attended",
    "link": "https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1353.java)"
  },
  {
    "name": "Product of the Last K Numbers",
    "link": "https://leetcode.com/problems/product-of-the-last-k-numbers/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1352.java)"
  },
  {
    "name": "Count Negative Numbers in a Sorted Matrix",
    "link": "https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1351.java)"
  },
  {
    "name": "Maximum Students Taking Exam",
    "link": "https://leetcode.com/problems/maximum-students-taking-exam/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1349.java)"
  },
  {
    "name": "Tweet Counts Per Frequency",
    "link": "https://leetcode.com/problems/tweet-counts-per-frequency/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1348.java)"
  },
  {
    "name": "Minimum Number of Steps to Make Two Strings Anagram",
    "link": "https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1347.java)"
  },
  {
    "name": "Check If N and Its Double Exist",
    "link": "https://leetcode.com/problems/check-if-n-and-its-double-exist/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1346.java)"
  },
  {
    "name": "Jump Game IV",
    "link": "https://leetcode.com/problems/jump-game-iv/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1345.java)"
  },
  {
    "name": "Angle Between Hands of a Clock",
    "link": "https://leetcode.com/problems/angle-between-hands-of-a-clock/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1344.java)"
  },
  {
    "name": "Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold",
    "link": "https://leetcode.com/problems/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1343.java)"
  },
  {
    "name": "Number of Steps to Reduce a Number to Zero",
    "link": "https://leetcode.com/problems/number-of-steps-to-reduce-a-number-to-zero/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1342.java)"
  },
  {
    "name": "The K Weakest Rows in a Matrix",
    "link": "https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1341.java)"
  },
  {
    "name": "Maximum Product of Splitted Binary Tree",
    "link": "https://leetcode.com/problems/maximum-product-of-splitted-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1339.java)"
  },
  {
    "name": "Reduce Array Size to The Half",
    "link": "https://leetcode.com/problems/reduce-array-size-to-the-half/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1338.java)"
  },
  {
    "name": "Remove Palindromic Subsequences",
    "link": "https://leetcode.com/problems/remove-palindromic-subsequences/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1337.java)"
  },
  {
    "name": "Filter Restaurants by Vegan-Friendly, Price and Distance",
    "link": "https://leetcode.com/problems/filter-restaurants-by-vegan-friendly-price-and-distance/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1333.java)"
  },
  {
    "name": "Remove Palindromic Subsequences",
    "link": "https://leetcode.com/problems/remove-palindromic-subsequences/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1332.java)"
  },
  {
    "name": "Rank Transform of an Array",
    "link": "https://leetcode.com/problems/rank-transform-of-an-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1331.java)"
  },
  {
    "name": "Sort the Matrix Diagonally",
    "link": "https://leetcode.com/problems/sort-the-matrix-diagonally/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1329.java)"
  },
  {
    "name": "Delete Leaves With a Given Value",
    "link": "https://leetcode.com/problems/delete-leaves-with-a-given-value/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1325.java)"
  },
  {
    "name": "Print Words Vertically",
    "link": "https://leetcode.com/problems/print-words-vertically/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1324.java)"
  },
  {
    "name": "Maximum 69 Number",
    "link": "https://leetcode.com/problems/maximum-69-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1323.java)"
  },
  {
    "name": "Convert Integer to the Sum of Two No-Zero Integers",
    "link": "https://leetcode.com/problems/convert-integer-to-the-sum-of-two-no-zero-integers/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1317.java)"
  },
  {
    "name": "Sum of Nodes with Even-Valued Grandparent",
    "link": "https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1315.java)"
  },
  {
    "name": "Matrix Block Sum",
    "link": "https://leetcode.com/problems/matrix-block-sum/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1314.java)"
  },
  {
    "name": "Decompress Run-Length Encoded List",
    "link": "https://leetcode.com/problems/decompress-run-length-encoded-list/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1313.java)"
  },
  {
    "name": "All Elements in Two Binary Search Trees",
    "link": "https://leetcode.com/problems/all-elements-in-two-binary-search-trees/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1305.java)"
  },
  {
    "name": "Find N Unique Integers Sum up to Zero",
    "link": "https://leetcode.com/problems/find-n-unique-integers-sum-up-to-zero/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1304.java)"
  },
  {
    "name": "Deepest Leaves Sum",
    "link": "https://leetcode.com/problems/deepest-leaves-sum/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1302.java)"
  },
  {
    "name": "Sum of Mutated Array Closest to Target",
    "link": "https://leetcode.com/problems/sum-of-mutated-array-closest-to-target/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1300.java)"
  },
  {
    "name": "Replace Elements with Greatest Element on Right Side",
    "link": "https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1299.java)"
  },
  {
    "name": "Maximum Number of Occurrences of a Substring",
    "link": "https://leetcode.com/problems/maximum-number-of-occurrences-of-a-substring/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1297.java)"
  },
  {
    "name": "Divide Array in Sets of K Consecutive Numbers",
    "link": "https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1296.java)"
  },
  {
    "name": "Find Numbers with Even Number of Digits",
    "link": "https://leetcode.com/problems/find-numbers-with-even-number-of-digits/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1295.java)  [Javascript](https://github.com/fishercoder1534/Leetcode/blob/master/javascript/_1295.js)"
  },
  {
    "name": "Sequential Digits",
    "link": "https://leetcode.com/problems/sequential-digits/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1291.java)"
  },
  {
    "name": "Convert Binary Number in a Linked List to Integer",
    "link": "https://leetcode.com/problems/convert-binary-number-in-a-linked-list-to-integer/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1290.java)"
  },
  {
    "name": "Minimum Falling Path Sum II",
    "link": "https://leetcode.com/problems/minimum-falling-path-sum-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1289.java)"
  },
  {
    "name": "Element Appearing More Than 25% In Sorted Array",
    "link": "https://leetcode.com/problems/element-appearing-more-than-25-in-sorted-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1287.java)"
  },
  {
    "name": "Iterator for Combination",
    "link": "https://leetcode.com/problems/iterator-for-combination/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1286.java)"
  },
  {
    "name": "Find the Smallest Divisor Given a Threshold",
    "link": "https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold/",
    "difficulty": "",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1283.java)"
  },
  {
    "name": "Group the People Given the Group Size They Belong To",
    "link": "https://leetcode.com/problems/group-the-people-given-the-group-size-they-belong-to/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1282.java)"
  },
  {
    "name": "Subtract the Product and Sum of Digits of an Integer",
    "link": "https://leetcode.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1281.java)"
  },
  {
    "name": "Count Square Submatrices with All Ones",
    "link": "https://leetcode.com/problems/count-square-submatrices-with-all-ones/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1277.java)"
  },
  {
    "name": "Find Winner on a Tic Tac Toe Game",
    "link": "https://leetcode.com/problems/find-winner-on-a-tic-tac-toe-game/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1275.java)"
  },
  {
    "name": "Delete Tree Nodes",
    "link": "https://leetcode.com/problems/delete-tree-nodes/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1273.java)"
  },
  {
    "name": "Hexspeak",
    "link": "https://leetcode.com/problems/hexspeak/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1271.java)"
  },
  {
    "name": "Search Suggestions System",
    "link": "https://leetcode.com/problems/search-suggestions-system/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1268.java)"
  },
  {
    "name": "Count Servers that Communicate",
    "link": "https://leetcode.com/problems/count-servers-that-communicate/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1267.java)"
  },
  {
    "name": "Minimum Time Visiting All Points",
    "link": "https://leetcode.com/problems/minimum-time-visiting-all-points/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1266.java)"
  },
  {
    "name": "Print Immutable Linked List in Reverse",
    "link": "https://leetcode.com/problems/print-immutable-linked-list-in-reverse//",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1265.java)"
  },
  {
    "name": "Find Elements in a Contaminated Binary Tree",
    "link": "https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1261.java)"
  },
  {
    "name": "Shift 2D Grid",
    "link": "https://leetcode.com/problems/shift-2d-grid/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1260.java)"
  },
  {
    "name": "Synonymous Sentences",
    "link": "https://leetcode.com/problems/synonymous-sentences/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1258.java)"
  },
  {
    "name": "Smallest Common Region",
    "link": "https://leetcode.com/problems/smallest-common-region/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1257.java)"
  },
  {
    "name": "Cells with Odd Values in a Matrix",
    "link": "https://leetcode.com/problems/cells-with-odd-values-in-a-matrix/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1252.java)"
  },
  {
    "name": "Minimum Remove to Make Valid Parentheses",
    "link": "https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1249.java)"
  },
  {
    "name": "Array Transformation",
    "link": "https://leetcode.com/problems/array-transformation/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1243.java)"
  },
  {
    "name": "Find Positive Integer Solution for a Given Equation",
    "link": "https://leetcode.com/problems/find-positive-integer-solution-for-a-given-equation/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1237.java)"
  },
  {
    "name": "Check If It Is a Straight Line",
    "link": "https://leetcode.com/problems/check-if-it-is-a-straight-line/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1232.java)"
  },
  {
    "name": "Missing Number In Arithmetic Progression",
    "link": "https://leetcode.com/problems/missing-number-in-arithmetic-progression/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1228.java)"
  },
  {
    "name": "Split a String in Balanced Strings",
    "link": "https://leetcode.com/problems/split-a-string-in-balanced-strings/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1221.java)"
  },
  {
    "name": "Path with Maximum Gold",
    "link": "https://leetcode.com/problems/path-with-maximum-gold/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1219.java)"
  },
  {
    "name": "Play with Chips",
    "link": "https://leetcode.com/problems/play-with-chips/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1217.java)"
  },
  {
    "name": "Two Sum BSTs",
    "link": "https://leetcode.com/problems/two-sum-bsts/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1214.java)"
  },
  {
    "name": "Intersection of Three Sorted Arrays",
    "link": "https://leetcode.com/problems/intersection-of-three-sorted-arrays/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1213.java)"
  },
  {
    "name": "Remove All Adjacent Duplicates in String II",
    "link": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1207.java)"
  },
  {
    "name": "Unique Number of Occurrences",
    "link": "https://leetcode.com/problems/unique-number-of-occurrences/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1207.java)"
  },
  {
    "name": "Minimum Absolute Difference",
    "link": "https://leetcode.com/problems/minimum-absolute-difference/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1200.java)"
  },
  {
    "name": "Find Smallest Common Element in All Rows",
    "link": "https://leetcode.com/problems/find-smallest-common-element-in-all-rows/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1198.java)"
  },
  {
    "name": "How Many Apples Can You Put into the Basket",
    "link": "https://leetcode.com/problems/how-many-apples-can-you-put-into-the-basket/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1196.java)"
  },
  {
    "name": "Reverse Substrings Between Each Pair of Parentheses",
    "link": "https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1190.java)"
  },
  {
    "name": "Maximum Number of Balloons",
    "link": "https://leetcode.com/problems/maximum-number-of-balloons/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1189.java)"
  },
  {
    "name": "Day of the Week",
    "link": "https://leetcode.com/problems/day-of-the-week/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1185.java)"
  },
  {
    "name": "Distance Between Bus Stops",
    "link": "https://leetcode.com/problems/distance-between-bus-stops/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1184.java)"
  },
  {
    "name": "Shortest Distance to Target Color",
    "link": "https://leetcode.com/problems/shortest-distance-to-target-color/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1182.java)"
  },
  {
    "name": "Count Substrings with Only One Distinct Letter",
    "link": "https://leetcode.com/problems/count-substrings-with-only-one-distinct-letter/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1180.java)"
  },
  {
    "name": "Diet Plan Performance",
    "link": "https://leetcode.com/problems/diet-plan-performance/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1176.java)"
  },
  {
    "name": "Prime Arrangements",
    "link": "https://leetcode.com/problems/prime-arrangements/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1175.java)"
  },
  {
    "name": "Remove Zero Sum Consecutive Nodes from Linked List",
    "link": "https://leetcode.com/problems/remove-zero-sum-consecutive-nodes-from-linked-list/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1171.java)"
  },
  {
    "name": "Single-Row Keyboard",
    "link": "https://leetcode.com/problems/single-row-keyboard/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1165.java)"
  },
  {
    "name": "Maximum Level Sum of a Binary Tree",
    "link": "https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1161.java)"
  },
  {
    "name": "Find Words That Can Be Formed by Characters",
    "link": "https://leetcode.com/problems/find-words-that-can-be-formed-by-characters/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1160.java)"
  },
  {
    "name": "Day of the Year",
    "link": "https://leetcode.com/problems/day-of-the-year/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1154.java)"
  },
  {
    "name": "Analyze User Website Visit Pattern",
    "link": "https://leetcode.com/problems/analyze-user-website-visit-pattern/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1152.java)"
  },
  {
    "name": "Minimum Swaps to Group All 1's Together",
    "link": "https://leetcode.com/problems/minimum-swaps-to-group-all-1s-together/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1151.java)"
  },
  {
    "name": "Check If a Number Is Majority Element in a Sorted Array",
    "link": "https://leetcode.com/problems/check-if-a-number-is-majority-element-in-a-sorted-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1150.java)"
  },
  {
    "name": "Snapshot Array",
    "link": "https://leetcode.com/problems/snapshot-array/",
    "difficulty": "Easy",
    "solution": "[Javascript](./javascript/_1146.js)"
  },
  {
    "name": "Longest Common Subsequence",
    "link": "https://leetcode.com/problems/longest-common-subsequence/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1143.java)"
  },
  {
    "name": "Alphabet Board Path",
    "link": "https://leetcode.com/problems/alphabet-board-path/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1138.java)"
  },
  {
    "name": "N-th Tribonacci Number",
    "link": "https://leetcode.com/problems/n-th-tribonacci-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1137.java)"
  },
  {
    "name": "Parallel Courses",
    "link": "https://leetcode.com/problems/parallel-courses/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1136.java)"
  },
  {
    "name": "Armstrong Number",
    "link": "https://leetcode.com/problems/armstrong-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1134.java)"
  },
  {
    "name": "Largest Unique Number",
    "link": "https://leetcode.com/problems/largest-unique-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1133.java)"
  },
  {
    "name": "Number of Equivalent Domino Pairs",
    "link": "https://leetcode.com/problems/number-of-equivalent-domino-pairs/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1128.java)"
  },
  {
    "name": "Relative Sort Array",
    "link": "https://leetcode.com/problems/relative-sort-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1122.java)"
  },
  {
    "name": "Compare Strings by Frequency of the Smallest Character",
    "link": "https://leetcode.com/problems/compare-strings-by-frequency-of-the-smallest-character/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1170.java)"
  },
  {
    "name": "Remove Vowels from a String",
    "link": "https://leetcode.com/problems/remove-vowels-from-a-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1119.java)"
  },
  {
    "name": "Number of Days in a Month",
    "link": "https://leetcode.com/problems/number-of-days-in-a-month/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1118.java)"
  },
  {
    "name": "Print in Order",
    "link": "https://leetcode.com/problems/print-in-order/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1114.java)"
  },
  {
    "name": "Delete Nodes And Return Forest",
    "link": "https://leetcode.com/problems/delete-nodes-and-return-forest/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1110.java)"
  },
  {
    "name": "Defanging an IP Address",
    "link": "https://leetcode.com/problems/defanging-an-ip-address/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1108.java)"
  },
  {
    "name": "Path In Zigzag Labelled Binary Tree",
    "link": "https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1104.java)"
  },
  {
    "name": "Distribute Candies to People",
    "link": "https://leetcode.com/problems/distribute-candies-to-people/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1103.java)"
  },
  {
    "name": "Find K-Length Substrings With No Repeated Characters",
    "link": "https://leetcode.com/problems/find-k-length-substrings-with-no-repeated-characters/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1100.java)"
  },
  {
    "name": "Two Sum Less Than K",
    "link": "https://leetcode.com/problems/two-sum-less-than-k/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1099.java)"
  },
  {
    "name": "Car Pooling",
    "link": "https://leetcode.com/problems/car-pooling/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1094.java)"
  },
  {
    "name": "Largest Values From Labels",
    "link": "https://leetcode.com/problems/largest-values-from-labels/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1090.java)"
  },
  {
    "name": "Shortest Path in Binary Matrix",
    "link": "https://leetcode.com/problems/shortest-path-in-binary-matrix/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1091.java)"
  },
  {
    "name": "Duplicate Zeros",
    "link": "https://leetcode.com/problems/duplicate-zeros/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1089.java)"
  },
  {
    "name": "Brace Expansion",
    "link": "https://leetcode.com/problems/brace-expansion/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1087.java)"
  },
  {
    "name": "High Five",
    "link": "https://leetcode.com/problems/high-five/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1086.java)"
  },
  {
    "name": "Sum of Digits in the Minimum Number",
    "link": "https://leetcode.com/problems/sum-of-digits-in-the-minimum-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1085.java)"
  },
  {
    "name": "Letter Tile Possibilities",
    "link": "https://leetcode.com/problems/letter-tile-possibilities/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1079.java)"
  },
  {
    "name": "Occurrences After Bigram",
    "link": "https://leetcode.com/problems/occurrences-after-bigram/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1078.java)"
  },
  {
    "name": "Greatest Common Divisor of Strings",
    "link": "https://leetcode.com/problems/greatest-common-divisor-of-strings/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1071.java)"
  },
  {
    "name": "Campus Bikes II",
    "link": "https://leetcode.com/problems/campus-bikes-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1066.java)"
  },
  {
    "name": "Index Pairs of a String",
    "link": "https://leetcode.com/problems/index-pairs-of-a-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1065.java)"
  },
  {
    "name": "Longest Repeating Substring",
    "link": "https://leetcode.com/problems/longest-repeating-substring/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1062.java)"
  },
  {
    "name": "Campus Bikes",
    "link": "https://leetcode.com/problems/campus-bikes/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1057.java)"
  },
  {
    "name": "Confusing Number",
    "link": "https://leetcode.com/problems/confusing-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1056.java)"
  },
  {
    "name": "Fixed Point",
    "link": "https://leetcode.com/problems/fixed-point/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1055.java)"
  },
  {
    "name": "Height Checker",
    "link": "https://leetcode.com/problems/height-checker/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1051.java)"
  },
  {
    "name": "Remove All Adjacent Duplicates In String",
    "link": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1047.java)"
  },
  {
    "name": "Last Stone Weight",
    "link": "https://leetcode.com/problems/last-stone-weight/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1046.java)"
  },
  {
    "name": "Partition Array for Maximum Sum",
    "link": "https://leetcode.com/problems/partition-array-for-maximum-sum/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1043.java)"
  },
  {
    "name": "Binary Search Tree to Greater Sum Tree",
    "link": "https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1038.java)"
  },
  {
    "name": "Valid Boomerang",
    "link": "https://leetcode.com/problems/valid-boomerang/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1037.java)"
  },
  {
    "name": "Moving Stones Until Consecutive",
    "link": "https://leetcode.com/problems/moving-stones-until-consecutive/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1033.java)"
  },
  {
    "name": "Matrix Cells in Distance Order",
    "link": "https://leetcode.com/problems/matrix-cells-in-distance-order/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1030.java)"
  },
  {
    "name": "Two City Scheduling",
    "link": "https://leetcode.com/problems/two-city-scheduling/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1029.java)"
  },
  {
    "name": "Maximum Difference Between Node and Ancestor",
    "link": "https://leetcode.com/problems/maximum-difference-between-node-and-ancestor/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1026.java)"
  },
  {
    "name": "Divisor Game",
    "link": "https://leetcode.com/problems/divisor-game/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1025.java)"
  },
  {
    "name": "Video Stitching",
    "link": "https://leetcode.com/problems/video-stitching/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1024.java)"
  },
  {
    "name": "Sum of Root To Leaf Binary Numbers",
    "link": "https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1022.java)"
  },
  {
    "name": "Remove Outermost Parentheses",
    "link": "https://leetcode.com/problems/remove-outermost-parentheses/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1021.java)"
  },
  {
    "name": "Number of Enclaves",
    "link": "https://leetcode.com/problems/number-of-enclaves/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1020.java)"
  },
  {
    "name": "Next Greater Node In Linked List",
    "link": "https://leetcode.com/problems/next-greater-node-in-linked-list/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1019.java)"
  },
  {
    "name": "Binary Prefix Divisible By 5",
    "link": "https://leetcode.com/problems/binary-prefix-divisible-by-5/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1018.java)"
  },
  {
    "name": "Best Sightseeing Pair",
    "link": "https://leetcode.com/problems/best-sightseeing-pair/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1014.java)"
  },
  {
    "name": "Partition Array Into Three Parts With Equal Sum",
    "link": "https://leetcode.com/problems/partition-array-into-three-parts-with-equal-sum/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1013.java)"
  },
  {
    "name": "Capacity To Ship Packages Within D Days",
    "link": "https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1011.java)"
  },
  {
    "name": "Pairs of Songs With Total Durations Divisible by 60",
    "link": "https://leetcode.com/problems/pairs-of-songs-with-total-durations-divisible-by-60/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1010.java)"
  },
  {
    "name": "Complement of Base 10 Integer",
    "link": "https://leetcode.com/problems/complement-of-base-10-integer/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1009.java)"
  },
  {
    "name": "Construct Binary Search Tree from Preorder Traversal",
    "link": "https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1008.java)"
  },
  {
    "name": "Maximize Sum Of Array After K Negations",
    "link": "https://leetcode.com/problems/maximize-sum-of-array-after-k-negations/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1005.java)"
  },
  {
    "name": "Max Consecutive Ones III",
    "link": "https://leetcode.com/problems/max-consecutive-ones-iii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1004.java)"
  },
  {
    "name": "Check If Word Is Valid After Substitutions",
    "link": "https://leetcode.com/problems/check-if-word-is-valid-after-substitutions/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1003.java)"
  },
  {
    "name": "Find Common Characters",
    "link": "https://leetcode.com/problems/find-common-characters/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1002.java)"
  },
  {
    "name": "Available Captures for Rook",
    "link": "https://leetcode.com/problems/available-captures-for-rook/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_999.java)"
  },
  {
    "name": "Broken Calculator",
    "link": "https://leetcode.com/problems/broken-calculator/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_991.java)"
  },
  {
    "name": "Time Based Key-Value Store",
    "link": "https://leetcode.com/problems/time-based-key-value-store/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_981.java)"
  },
  {
    "name": "Find the Town Judge",
    "link": "https://leetcode.com/problems/find-the-town-judge/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_997.java)"
  },
  {
    "name": "Rotting Oranges",
    "link": "https://leetcode.com/problems/rotting-oranges/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_994.java)"
  },
  {
    "name": "Cousins in Binary Tree",
    "link": "https://leetcode.com/problems/cousins-in-binary-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_993.java)"
  },
  {
    "name": "Add to Array-Form of Integer",
    "link": "https://leetcode.com/problems/add-to-array-form-of-integer/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_989.java)"
  },
  {
    "name": "Smallest String Starting From Leaf",
    "link": "https://leetcode.com/problems/smallest-string-starting-from-leaf/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_988.java)"
  },
  {
    "name": "Vertical Order Traversal of a Binary Tree",
    "link": "https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_987.java)"
  },
  {
    "name": "Interval List Intersections",
    "link": "https://leetcode.com/problems/interval-list-intersections/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_986.java)"
  },
  {
    "name": "Sum of Even Numbers After Queries",
    "link": "https://leetcode.com/problems/sum-of-even-numbers-after-queries/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_985.java)"
  },
  {
    "name": "Unique Paths III",
    "link": "https://leetcode.com/problems/unique-paths-iii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_980.java)"
  },
  {
    "name": "Distribute Coins in Binary Tree",
    "link": "https://leetcode.com/problems/distribute-coins-in-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_979.java)"
  },
  {
    "name": "Squares of a Sorted Array",
    "link": "https://leetcode.com/problems/squares-of-a-sorted-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_977.java)"
  },
  {
    "name": "Largest Perimeter Triangle",
    "link": "https://leetcode.com/problems/largest-perimeter-triangle/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_976.java)"
  },
  {
    "name": "Subarray Sums Divisible by K",
    "link": "https://leetcode.com/problems/subarray-sums-divisible-by-k/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_974.java)"
  },
  {
    "name": "K Closest Points to Origin",
    "link": "https://leetcode.com/problems/k-closest-points-to-origin/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_973.java)"
  },
  {
    "name": "Powerful Integers",
    "link": "https://leetcode.com/problems/powerful-integers/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_970.java)"
  },
  {
    "name": "Vowel Spellchecker",
    "link": "https://leetcode.com/problems/vowel-spellchecker/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_966.java)"
  },
  {
    "name": "Univalued Binary Tree",
    "link": "https://leetcode.com/problems/univalued-binary-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_965.java)"
  },
  {
    "name": "N-Repeated Element in Size 2N Array",
    "link": "https://leetcode.com/problems/n-repeated-element-in-size-2n-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_961.java)"
  },
  {
    "name": "Check Completeness of a Binary Tree",
    "link": "https://leetcode.com/problems/check-completeness-of-a-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_958.java)"
  },
  {
    "name": "Prison Cells After N Days",
    "link": "https://leetcode.com/problems/prison-cells-after-n-days/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_957.java)"
  },
  {
    "name": "Array of Doubled Pairs",
    "link": "https://leetcode.com/problems/array-of-doubled-pairs/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_954.java)"
  },
  {
    "name": "Verifying an Alien Dictionary",
    "link": "https://leetcode.com/problems/verifying-an-alien-dictionary/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_953.java)"
  },
  {
    "name": "Flip Equivalent Binary Trees",
    "link": "https://leetcode.com/problems/flip-equivalent-binary-trees/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_951.java)"
  },
  {
    "name": "Reveal Cards In Increasing Order",
    "link": "https://leetcode.com/problems/reveal-cards-in-increasing-order/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_950.java)"
  },
  {
    "name": "Validate Stack Sequences",
    "link": "https://leetcode.com/problems/validate-stack-sequences/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_946.java)"
  },
  {
    "name": "Delete Columns to Make Sorted",
    "link": "https://leetcode.com/problems/delete-columns-to-make-sorted/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_944.java)"
  },
  {
    "name": "DI String Match",
    "link": "https://leetcode.com/problems/di-string-match/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_942.java)"
  },
  {
    "name": "Valid Mountain Array",
    "link": "https://leetcode.com/problems/valid-mountain-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_941.java)"
  },
  {
    "name": "Range Sum of BST",
    "link": "https://leetcode.com/problems/range-sum-of-bst/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_938.java)"
  },
  {
    "name": "Reorder Log Files",
    "link": "https://leetcode.com/problems/reorder-log-files/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_937.java)"
  },
  {
    "name": "Stamping The Sequence",
    "link": "https://leetcode.com/problems/stamping-the-sequence/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_936.java)"
  },
  {
    "name": "Knight Dialer",
    "link": "https://leetcode.com/problems/knight-dialer/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_935.java)"
  },
  {
    "name": "Number of Recent Calls",
    "link": "https://leetcode.com/problems/number-of-recent-calls/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_933.java)"
  },
  {
    "name": "Minimum Falling Path Sum",
    "link": "https://leetcode.com/problems/minimum-falling-path-sum/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_931.java)"
  },
  {
    "name": "Unique Email Addresses",
    "link": "https://leetcode.com/problems/unique-email-addresses/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_929.java)"
  },
  {
    "name": "Long Pressed Name",
    "link": "https://leetcode.com/problems/long-pressed-name/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_925.java)"
  },
  {
    "name": "3Sum With Multiplicity",
    "link": "https://leetcode.com/problems/3sum-with-multiplicity/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_923.java)"
  },
  {
    "name": "Sort Array By Parity II",
    "link": "https://leetcode.com/problems/sort-array-by-parity-ii/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_922.java)"
  },
  {
    "name": "Minimum Add to Make Parentheses Valid",
    "link": "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_921.java)"
  },
  {
    "name": "Maximum Sum Circular Subarray",
    "link": "https://leetcode.com/problems/maximum-sum-circular-subarray/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_918.java)"
  },
  {
    "name": "Reverse Only Letters",
    "link": "https://leetcode.com/problems/reverse-only-letters/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_917.java)"
  },
  {
    "name": "X of a Kind in a Deck of Cards",
    "link": "https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_914.java)"
  },
  {
    "name": "Sort an Array",
    "link": "https://leetcode.com/problems/sort-an-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_912.java)"
  },
  {
    "name": "Smallest Range I",
    "link": "https://leetcode.com/problems/smallest-range-i/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_908.java)"
  },
  {
    "name": "Online Stock Span",
    "link": "https://leetcode.com/problems/online-stock-span/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_901.java)"
  },
  {
    "name": "Fruit Into Baskets",
    "link": "https://leetcode.com/problems/fruit-into-baskets/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_904.java)"
  },
  {
    "name": "RLE Iterator",
    "link": "https://leetcode.com/problems/rle-iterator/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_900.java)"
  },
  {
    "name": "Increasing Order Search Tree",
    "link": "https://leetcode.com/problems/increasing-order-search-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_897.java)"
  },
  {
    "name": "Monotonic Array",
    "link": "https://leetcode.com/problems/monotonic-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_896.java)"
  },
  {
    "name": "Maximum Frequency Stack",
    "link": "https://leetcode.com/problems/maximum-frequency-stack/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_895.java)"
  },
  {
    "name": "Groups of Special-Equivalent Strings",
    "link": "https://leetcode.com/problems/groups-of-special-equivalent-strings/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_893.java)"
  },
  {
    "name": "Surface Area of 3D Shapes",
    "link": "https://leetcode.com/problems/surface-area-of-3d-shapes/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_892.java)"
  },
  {
    "name": "Find and Replace Pattern",
    "link": "https://leetcode.com/problems/find-and-replace-pattern/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_890.java)"
  },
  {
    "name": "Fair Candy Swap",
    "link": "https://leetcode.com/problems/fair-candy-swap/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_888.java)"
  },
  {
    "name": "Spiral Matrix III",
    "link": "https://leetcode.com/problems/spiral-matrix-iii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_885.java)"
  },
  {
    "name": "Uncommon Words from Two Sentences",
    "link": "https://leetcode.com/problems/uncommon-words-from-two-sentences/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_884.java)"
  },
  {
    "name": "Projection Area of 3D Shapes",
    "link": "https://leetcode.com/problems/projection-area-of-3d-shapes/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_883.java)"
  },
  {
    "name": "Boats to Save People",
    "link": "https://leetcode.com/problems/boats-to-save-people/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_881.java)"
  },
  {
    "name": "Decoded String at Index",
    "link": "https://leetcode.com/problems/decoded-string-at-index/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_880.java)"
  },
  {
    "name": "Stone Game",
    "link": "https://leetcode.com/problems/stone-game/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_877.java)"
  },
  {
    "name": "Middle of the Linked List",
    "link": "https://leetcode.com/problems/middle-of-the-linked-list/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_876.java)"
  },
  {
    "name": "Leaf-Similar Trees",
    "link": "https://leetcode.com/problems/leaf-similar-trees/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_872.java)"
  },
  {
    "name": "Advantage Shuffle",
    "link": "https://leetcode.com/problems/advantage-shuffle/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_870.java)"
  },
  {
    "name": "Binary Gap",
    "link": "https://leetcode.com/problems/binary-gap/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_868.java)"
  },
  {
    "name": "Transpose Matrix",
    "link": "https://leetcode.com/problems/transpose-matrix/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_867.java)"
  },
  {
    "name": "Score After Flipping Matrix",
    "link": "https://leetcode.com/problems/score-after-flipping-matrix/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_861.java)"
  },
  {
    "name": "Lemonade Change",
    "link": "https://leetcode.com/problems/lemonade-change/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_860.java)"
  },
  {
    "name": "Buddy Strings",
    "link": "https://leetcode.com/problems/buddy-strings/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_859.java)"
  },
  {
    "name": "Score of Parentheses",
    "link": "https://leetcode.com/problems/score-of-parentheses/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_856.java)"
  },
  {
    "name": "Peak Index in a Mountain Array",
    "link": "https://leetcode.com/problems/peak-index-in-a-mountain-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_852.java)"
  },
  {
    "name": "Maximize Distance to Closest Person",
    "link": "https://leetcode.com/problems/maximize-distance-to-closest-person/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_849.java)"
  },
  {
    "name": "Shifting Letters",
    "link": "https://leetcode.com/problems/shifting-letters/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_848.java)"
  },
  {
    "name": "Backspace String Compare",
    "link": "https://leetcode.com/problems/backspace-string-compare/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_844.java)"
  },
  {
    "name": "Keys and Rooms",
    "link": "https://leetcode.com/problems/keys-and-rooms/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_841.java)"
  },
  {
    "name": "Magic Squares In Grid",
    "link": "https://leetcode.com/problems/magic-squares-in-grid/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_840.java)"
  },
  {
    "name": "Push Dominoes",
    "link": "https://leetcode.com/problems/push-dominoes/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_838.java)"
  },
  {
    "name": "Rectangle Overlap",
    "link": "https://leetcode.com/problems/rectangle-overlap/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_836.java)"
  },
  {
    "name": "Flipping an Image",
    "link": "https://leetcode.com/problems/flipping-an-image/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_832.java)"
  },
  {
    "name": "Positions of Large Groups",
    "link": "https://leetcode.com/problems/positions-of-large-groups/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_830.java)"
  },
  {
    "name": "Goat Latin",
    "link": "https://leetcode.com/problems/goat-latin/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_824.java)"
  },
  {
    "name": "Binary Trees With Factors",
    "link": "https://leetcode.com/problems/binary-trees-with-factors/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_823.java)"
  },
  {
    "name": "Shortest Distance to a Character",
    "link": "https://leetcode.com/problems/shortest-distance-to-a-character/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_821.java)"
  },
  {
    "name": "Short Encoding of Words",
    "link": "https://leetcode.com/problems/short-encoding-of-words/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_820.java)"
  },
  {
    "name": "Most Common Word",
    "link": "https://leetcode.com/problems/most-common-word/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_819.java)"
  },
  {
    "name": "Ambiguous Coordinates",
    "link": "https://leetcode.com/problems/ambiguous-coordinates/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_816.java)"
  },
  {
    "name": "Binary Tree Pruning",
    "link": "https://leetcode.com/problems/binary-tree-pruning/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_814.java)"
  },
  {
    "name": "Largest Triangle Area",
    "link": "https://leetcode.com/problems/largest-triangle-area/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_812.java)"
  },
  {
    "name": "Subdomain Visit Count",
    "link": "https://leetcode.com/problems/subdomain-visit-count/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_811.java)"
  },
  {
    "name": "Expressive Words",
    "link": "https://leetcode.com/problems/expressive-words/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_809.java)"
  },
  {
    "name": "Max Increase to Keep City Skyline",
    "link": "https://leetcode.com/problems/max-increase-to-keep-city-skyline/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_807.java)"
  },
  {
    "name": "Number of Lines To Write String",
    "link": "https://leetcode.com/problems/number-of-lines-to-write-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_806.java)"
  },
  {
    "name": "Unique Morse Code Words",
    "link": "https://leetcode.com/problems/unique-morse-code-words/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_804.java)"
  },
  {
    "name": "Similar RGB Color",
    "link": "https://leetcode.com/problems/similar-rgb-color/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_800.java)"
  },
  {
    "name": "Champagne Tower",
    "link": "https://leetcode.com/problems/champagne-tower/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_799.java)"
  },
  {
    "name": "Rotate String",
    "link": "https://leetcode.com/problems/rotate-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_796.java)"
  },
  {
    "name": "Number of Matching Subsequences",
    "link": "https://leetcode.com/problems/number-of-matching-subsequences/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_792.java)"
  },
  {
    "name": "Custom Sort String",
    "link": "https://leetcode.com/problems/custom-sort-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_791.java)"
  },
  {
    "name": "Escape The Ghosts",
    "link": "https://leetcode.com/problems/escape-the-ghosts/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_789.java)"
  },
  {
    "name": "Rotated Digits",
    "link": "https://leetcode.com/problems/rotated-digits/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_788.java)"
  },
  {
    "name": "Letter Case Permutation",
    "link": "https://leetcode.com/problems/letter-case-permutation/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_784.java)"
  },
  {
    "name": "Minimum Distance Between BST Nodes",
    "link": "https://leetcode.com/problems/minimum-distance-between-bst-nodes/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_783.java)"
  },
  {
    "name": "Rabbits in Forest",
    "link": "https://leetcode.com/problems/rabbits-in-forest/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_781.java)"
  },
  {
    "name": "K-th Symbol in Grammar",
    "link": "https://leetcode.com/problems/k-th-symbol-in-grammar/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_779.java)"
  },
  {
    "name": "Split BST",
    "link": "https://leetcode.com/problems/split-bst/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_776.java)"
  },
  {
    "name": "Global and Local Inversions",
    "link": "https://leetcode.com/problems/global-and-local-inversions/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_775.java)"
  },
  {
    "name": "Jewels and Stones",
    "link": "https://leetcode.com/problems/jewels-and-stones/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_771.java)"
  },
  {
    "name": "Max Chunks To Make Sorted",
    "link": "https://leetcode.com/problems/max-chunks-to-make-sorted/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_769.java)"
  },
  {
    "name": "Reorganize String",
    "link": "https://leetcode.com/problems/reorganize-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_767.java)"
  },
  {
    "name": "Toeplitz Matrix",
    "link": "https://leetcode.com/problems/toeplitz-matrix/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_766.java)"
  },
  {
    "name": "Couples Holding Hands",
    "link": "https://leetcode.com/problems/couples-holding-hands/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_765.java)"
  },
  {
    "name": "Largest Plus Sign",
    "link": "https://leetcode.com/problems/largest-plus-sign/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_764.java)"
  },
  {
    "name": "Partition Labels",
    "link": "https://leetcode.com/problems/partition-labels/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_763.java)"
  },
  {
    "name": "Prime Number of Set Bits in Binary Representation",
    "link": "https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_762.java)"
  },
  {
    "name": "Find Anagram Mappings",
    "link": "https://leetcode.com/problems/find-anagram-mappings/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_760.java)"
  },
  {
    "name": "Bold Words in String",
    "link": "https://leetcode.com/problems/bold-words-in-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_758.java)"
  },
  {
    "name": "Set Intersection Size At Least Two",
    "link": "https://leetcode.com/problems/set-intersection-size-at-least-two/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_757.java)"
  },
  {
    "name": "Pyramid Transition Matrix",
    "link": "https://leetcode.com/problems/pyramid-transition-matrix/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_756.java)"
  },
  {
    "name": "Pour Water",
    "link": "https://leetcode.com/problems/pour-water/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_755.java)"
  },
  {
    "name": "Reach a Number",
    "link": "https://leetcode.com/problems/reach-a-number/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_754.java)"
  },
  {
    "name": "Number Of Corner Rectangles",
    "link": "https://leetcode.com/problems/number-of-corner-rectangles/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_750.java)"
  },
  {
    "name": "Shortest Completing Word",
    "link": "https://leetcode.com/problems/shortest-completing-word/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_748.java)"
  },
  {
    "name": "Largest Number Greater Than Twice of Others",
    "link": "https://leetcode.com/problems/largest-number-greater-than-twice-of-others/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_747.java)"
  },
  {
    "name": "Min Cost Climbing Stairs",
    "link": "https://leetcode.com/problems/min-cost-climbing-stairs/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_746.java)"
  },
  {
    "name": "Find Smallest Letter Greater Than Target",
    "link": "https://leetcode.com/problems/find-smallest-letter-greater-than-target/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_744.java)"
  },
  {
    "name": "Network Delay Time",
    "link": "https://leetcode.com/problems/network-delay-time/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_743.java)"
  },
  {
    "name": "Closest Leaf in a Binary Tree",
    "link": "https://leetcode.com/problems/closest-leaf-in-a-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_742.java)"
  },
  {
    "name": "Delete and Earn",
    "link": "https://leetcode.com/problems/delete-and-earn/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_740.java)"
  },
  {
    "name": "Daily Temperatures",
    "link": "https://leetcode.com/problems/daily-temperatures/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_739.java)"
  },
  {
    "name": "Monotone Increasing Digits",
    "link": "https://leetcode.com/problems/monotone-increasing-digits/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_738.java)"
  },
  {
    "name": "Sentence Similarity II",
    "link": "https://leetcode.com/problems/sentence-similarity-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_737.java)"
  },
  {
    "name": "Asteroid Collision",
    "link": "https://leetcode.com/problems/asteroid-collision/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_735.java)"
  },
  {
    "name": "Sentence Similarity",
    "link": "https://leetcode.com/problems/sentence-similarity/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_734.java)"
  },
  {
    "name": "Flood Fill",
    "link": "https://leetcode.com/problem**__**s/flood-fill/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_733.java)"
  },
  {
    "name": "My Calendar I",
    "link": "https://leetcode.com/problems/my-calendar-i/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_729.java)"
  },
  {
    "name": "Self Dividing Numbers",
    "link": "https://leetcode.com/problems/self-dividing-numbers/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_728.java)"
  },
  {
    "name": "Minimum Window Subsequence",
    "link": "https://leetcode.com/problems/minimum-window-subsequence/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_727.java)"
  },
  {
    "name": "Split Linked List in Parts",
    "link": "https://leetcode.com/problems/split-linked-list-in-parts/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_725.java)"
  },
  {
    "name": "Find Pivot Index",
    "link": "https://leetcode.com/problems/find-pivot-index/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_724.java)"
  },
  {
    "name": "Candy Crush",
    "link": "https://leetcode.com/problems/candy-crush/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_723.java)"
  },
  {
    "name": "Accounts Merge",
    "link": "https://leetcode.com/problems/accounts-merge/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_721.java)"
  },
  {
    "name": "Longest Word in Dictionary",
    "link": "https://leetcode.com/problems/longest-word-in-dictionary/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_720.java)"
  },
  {
    "name": "Find K-th Smallest Pair Distance",
    "link": "https://leetcode.com/problems/find-k-th-smallest-pair-distance/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_719.java)"
  },
  {
    "name": "Maximum Length of Repeated Subarray",
    "link": "https://leetcode.com/problems/maximum-length-of-repeated-subarray/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_718.java)"
  },
  {
    "name": "1-bit and 2-bit Characters",
    "link": "https://leetcode.com/problems/1-bit-and-2-bit-characters/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_717.java)"
  },
  {
    "name": "Max Stack",
    "link": "https://leetcode.com/problems/max-stack/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_716.java)"
  },
  {
    "name": "Best Time to Buy and Sell Stock with Transaction Fee",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_714.java)"
  },
  {
    "name": "Subarray Product Less Than K",
    "link": "https://leetcode.com/problems/subarray-product-less-than-k/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_713.java)"
  },
  {
    "name": "Minimum ASCII Delete Sum for Two Strings",
    "link": "https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_712.java)"
  },
  {
    "name": "To Lower Case",
    "link": "https://leetcode.com/problems/to-lower-case/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_709.java)"
  },
  {
    "name": "Design HashMap",
    "link": "https://leetcode.com/problems/design-hashmap/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_706.java)"
  },
  {
    "name": "Design HashSet",
    "link": "https://leetcode.com/problems/design-hashset/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_705.java)"
  },
  {
    "name": "Binary Search",
    "link": "https://leetcode.com/problems/binary-search/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_704.java)"
  },
  {
    "name": "Kth Largest Element in a Stream",
    "link": "https://leetcode.com/problems/kth-largest-element-in-a-stream/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_703.java)"
  },
  {
    "name": "Insert into a Binary Search Tree",
    "link": "https://leetcode.com/problems/insert-into-a-binary-search-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_701.java)"
  },
  {
    "name": "Search in a Binary Search Tree",
    "link": "https://leetcode.com/problems/search-in-a-binary-search-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_700.java)"
  },
  {
    "name": "Falling Squares",
    "link": "https://leetcode.com/problems/falling-squares/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_699.java)"
  },
  {
    "name": "Partition to K Equal Sum Subsets",
    "link": "https://leetcode.com/problems/partition-to-k-equal-sum-subsets/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_698.java), [C++](https://github.com/fishercoder1534/Leetcode/blob/master/cpp/_698.cpp)"
  },
  {
    "name": "Degree of an Array",
    "link": "https://leetcode.com/problems/degree-of-an-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_697.java)"
  },
  {
    "name": "Count Binary Substrings",
    "link": "https://leetcode.com/problems/count-binary-substrings/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_696.java)"
  },
  {
    "name": "Max Area of Island",
    "link": "https://leetcode.com/problems/max-area-of-island/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_695.java)"
  },
  {
    "name": "Number of Distinct Islands",
    "link": "https://leetcode.com/problems/number-of-distinct-islands/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_694.java)"
  },
  {
    "name": "Binary Number with Alternating Bits",
    "link": "https://leetcode.com/problems/binary-number-with-alternating-bits/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_693.java)"
  },
  {
    "name": "Top K Frequent Words",
    "link": "https://leetcode.com/problems/top-k-frequent-words/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_692.java)"
  },
  {
    "name": "Stickers to Spell Word",
    "link": "https://leetcode.com/problems/stickers-to-spell-word/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_691.java)"
  },
  {
    "name": "Employee Importance",
    "link": "https://leetcode.com/problems/employee-importance/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_690.java)"
  },
  {
    "name": "Maximum Sum of 3 Non-Overlapping Subarrays",
    "link": "https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_689.java)"
  },
  {
    "name": "Knight Probability in Chessboard",
    "link": "https://leetcode.com/problems/knight-probability-in-chessboard/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_688.java)"
  },
  {
    "name": "Longest Univalue Path",
    "link": "https://leetcode.com/problems/longest-univalue-path/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_687.java)"
  },
  {
    "name": "Repeated String Match",
    "link": "https://leetcode.com/problems/repeated-string-match/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_686.java)"
  },
  {
    "name": "Redundant Connection II",
    "link": "https://leetcode.com/problems/redundant-connection-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_685.java)"
  },
  {
    "name": "Redundant Connection",
    "link": "https://leetcode.com/problems/redundant-connection/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_684.java)"
  },
  {
    "name": "K Empty Slots",
    "link": "https://leetcode.com/problems/k-empty-slots/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_683.java)"
  },
  {
    "name": "Baseball Game",
    "link": "https://leetcode.com/problems/baseball-game/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_682.java)"
  },
  {
    "name": "Next Closest Time",
    "link": "https://leetcode.com/problems/parents-closest-time/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_681.java)"
  },
  {
    "name": "Valid Palindrome II",
    "link": "https://leetcode.com/problems/valid-palindrome-ii/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_680.java)"
  },
  {
    "name": "24 Game",
    "link": "https://leetcode.com/problems/24-game/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_679.java)"
  },
  {
    "name": "Valid Parenthesis String",
    "link": "https://leetcode.com/problems/valid-parenthesis-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_678.java)"
  },
  {
    "name": "Map Sum Pairs",
    "link": "https://leetcode.com/problems/map-sum-pairs/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_677.java)"
  },
  {
    "name": "Implement Magic Dictionary",
    "link": "https://leetcode.com/problems/implement-magic-dictionary/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_676.java)"
  },
  {
    "name": "Cut Off Trees for Golf Event",
    "link": "https://leetcode.com/problems/cut-off-trees-for-golf-event/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_675.java)"
  },
  {
    "name": "Longest Continuous Increasing Subsequence",
    "link": "https://leetcode.com/problems/longest-continuous-increasing-subsequence/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_674.java)"
  },
  {
    "name": "Number of Longest Increasing Subsequence",
    "link": "https://leetcode.com/problems/number-of-longest-increasing-subsequence/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_673.java)"
  },
  {
    "name": "Bulb Switcher II",
    "link": "https://leetcode.com/problems/bulb-switcher-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_672.java)"
  },
  {
    "name": "Second Minimum Node In a Binary Tree",
    "link": "https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_671.java)"
  },
  {
    "name": "Maximum Swap",
    "link": "https://leetcode.com/problems/maximum-swap/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_670.java)"
  },
  {
    "name": "Trim a Binary Search Tree",
    "link": "https://leetcode.com/problems/trim-a-binary-search-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_669.java)"
  },
  {
    "name": "Kth Smallest Number in Multiplication Table",
    "link": "https://leetcode.com/problems/kth-smallest-number-in-multiplication-table/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_668.java)"
  },
  {
    "name": "Beautiful Arrangement II",
    "link": "https://leetcode.com/problems/beautiful-arrangement-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_667.java)"
  },
  {
    "name": "Path Sum IV",
    "link": "https://leetcode.com/problems/path-sum-iv/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_666.java)"
  },
  {
    "name": "Non-decreasing Array",
    "link": "https://leetcode.com/problems/non-decreasing-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_665.java)"
  },
  {
    "name": "Strange Printer",
    "link": "https://leetcode.com/problems/strange-printer/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_664.java)"
  },
  {
    "name": "Equal Tree Partition",
    "link": "https://leetcode.com/problems/equal-tree-partition/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_663.java)"
  },
  {
    "name": "Maximum Width of Binary Tree",
    "link": "https://leetcode.com/problems/maximum-width-of-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_662.java)"
  },
  {
    "name": "Image Smoother",
    "link": "https://leetcode.com/problems/image-smoother/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_661.java)"
  },
  {
    "name": "Remove 9",
    "link": "https://leetcode.com/problems/remove-9/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_660.java)"
  },
  {
    "name": "Split Array into Consecutive Subsequences",
    "link": "https://leetcode.com/problems/split-array-into-consecutive-subsequences/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_659.java)"
  },
  {
    "name": "Find K Closest Elements",
    "link": "https://leetcode.com/problems/find-k-closest-elements/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_658.java)"
  },
  {
    "name": "Judge Route Circle",
    "link": "https://leetcode.com/problems/judge-route-circle/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_657.java)"
  },
  {
    "name": "Coin Path",
    "link": "https://leetcode.com/problems/coin-path/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_656.java)"
  },
  {
    "name": "Print Binary Tree",
    "link": "https://leetcode.com/problems/print-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_655.java)"
  },
  {
    "name": "Maximum Binary Tree",
    "link": "https://leetcode.com/problems/maximum-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_654.java)"
  },
  {
    "name": "Two Sum IV - Input is a BST",
    "link": "https://leetcode.com/problems/two-sum-iv-input-is-a-bst/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_653.java)"
  },
  {
    "name": "Find Duplicate Subtrees",
    "link": "https://leetcode.com/problems/find-duplicate-subtrees/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_652.java)"
  },
  {
    "name": "4 Keys Keyboard",
    "link": "https://leetcode.com/problems/4-keys-keyboard/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_651.java)"
  },
  {
    "name": "2 Keys Keyboard",
    "link": "https://leetcode.com/problems/2-keys-keyboard/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_650.java)"
  },
  {
    "name": "Dota2 Senate",
    "link": "https://leetcode.com/problems/dota2-senate/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_649.java)"
  },
  {
    "name": "Replace Words",
    "link": "https://leetcode.com/problems/replace-words/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_648.java)"
  },
  {
    "name": "Palindromic Substrings",
    "link": "https://leetcode.com/problems/palindromic-substrings/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_647.java)"
  },
  {
    "name": "Maximum Length of Pair Chain",
    "link": "https://leetcode.com/problems/maximum-length-of-pair-chain/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_646.java)"
  },
  {
    "name": "Set Mismatch",
    "link": "https://leetcode.com/problems/set-mismatch/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_645.java)"
  },
  {
    "name": "Maximum Average Subarray II",
    "link": "https://leetcode.com/problems/maximum-average-subarray-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_644.java)"
  },
  {
    "name": "Maximum Average Subarray I",
    "link": "https://leetcode.com/problems/maximum-average-subarray-i/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_643.java)"
  },
  {
    "name": "Design Search Autocomplete System",
    "link": "https://leetcode.com/problems/design-search-autocomplete-system/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_642.java)"
  },
  {
    "name": "Solve the Equation",
    "link": "https://leetcode.com/problems/solve-the-equation/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_640.java)"
  },
  {
    "name": "Decode Ways II",
    "link": "https://leetcode.com/problems/decode-ways-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_639.java)"
  },
  {
    "name": "Shopping Offers",
    "link": "https://leetcode.com/problems/shopping-offers/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_638.java)"
  },
  {
    "name": "Average of Levels in Binary Tree",
    "link": "https://leetcode.com/problems/average-of-levels-in-binary-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_637.java)"
  },
  {
    "name": "Exclusive Time of Functions",
    "link": "https://leetcode.com/problems/exclusive-time-of-functions/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_636.java)"
  },
  {
    "name": "Design Log Storage System",
    "link": "https://leetcode.com/problems/design-log-storage-system/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_635.java)"
  },
  {
    "name": "Find the Derangement of An Array",
    "link": "https://leetcode.com/problems/find-the-derangement-of-an-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_634.java)"
  },
  {
    "name": "Sum of Square Numbers",
    "link": "https://leetcode.com/problems/sum-of-square-numbers/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_633.java)"
  },
  {
    "name": "Smallest Range",
    "link": "https://leetcode.com/problems/smallest-range/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_632.java)"
  },
  {
    "name": "Design Excel Sum Formula",
    "link": "https://leetcode.com/problems/design-excel-sum-formula/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_631.java)"
  },
  {
    "name": "Course Schedule III",
    "link": "https://leetcode.com/problems/course-schedule-iii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_630.java)"
  },
  {
    "name": "K Inverse Pairs Array",
    "link": "https://leetcode.com/problems/k-inverse-pairs-array/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_629.java)"
  },
  {
    "name": "Maximum Product of Three Numbers",
    "link": "https://leetcode.com/problems/maximum-product-of-three-numbers/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_628.java)"
  },
  {
    "name": "Minimum Factorization",
    "link": "https://leetcode.com/problems/minimum-factorization/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_625.java)"
  },
  {
    "name": "Maximum Distance in Arrays",
    "link": "https://leetcode.com/problems/maximum-distance-in-arrays/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_624.java)"
  },
  {
    "name": "Add One Row to Tree",
    "link": "https://leetcode.com/problems/add-one-row-to-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_623.java)"
  },
  {
    "name": "Design Circular Queue",
    "link": "https://leetcode.com/problems/design-circular-queue/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_622.java)"
  },
  {
    "name": "Task Scheduler",
    "link": "https://leetcode.com/problems/task-scheduler/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_621.java)"
  },
  {
    "name": "Merge Two Binary Trees",
    "link": "https://leetcode.com/problems/merge-two-binary-trees/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_617.java)"
  },
  {
    "name": "Add Bold Tag in String",
    "link": "https://leetcode.com/problems/add-bold-tag-in-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_616.java)"
  },
  {
    "name": "Valid Triangle Number",
    "link": "https://leetcode.com/problems/valid-triangle-number/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_611.java)"
  },
  {
    "name": "Find Duplicate File in System",
    "link": "https://leetcode.com/problems/find-duplicate-file-in-system/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_609.java)"
  },
  {
    "name": "Construct String from Binary Tree",
    "link": "https://leetcode.com/problems/construct-string-from-binary-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_606.java)"
  },
  {
    "name": "Can Place Flowers",
    "link": "https://leetcode.com/problems/can-place-flowers/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_605.java)"
  },
  {
    "name": "Design Compressed String Iterator",
    "link": "https://leetcode.com/problems/design-compressed-string-iterator/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_604.java)"
  },
  {
    "name": "Non-negative Integers without Consecutive Ones",
    "link": "https://leetcode.com/problems/non-negative-integers-without-consecutive-ones/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_600.java)"
  },
  {
    "name": "Minimum Index Sum of Two Lists",
    "link": "https://leetcode.com/problems/minimum-index-sum-of-two-lists/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_599.java)"
  },
  {
    "name": "Range Addition II",
    "link": "https://leetcode.com/problems/range-addition-ii/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_598.java)"
  },
  {
    "name": "Longest Harmonious Subsequence",
    "link": "https://leetcode.com/problems/longest-harmonious-subsequence/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_594.java)"
  },
  {
    "name": "Valid Square",
    "link": "https://leetcode.com/problems/valid-square/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_593.java), [Javascript](./javascript/_593.js)"
  },
  {
    "name": "Fraction Addition and Subtraction",
    "link": "https://leetcode.com/problems/fraction-addition-and-subtraction/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_592.java)"
  },
  {
    "name": "Tag Validator",
    "link": "https://leetcode.com/problems/tag-validator/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_591.java)"
  },
  {
    "name": "N-ary Tree Postorder Traversal",
    "link": "https://leetcode.com/problems/n-ary-tree-postorder-traversal/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_590.java)"
  },
  {
    "name": "N-ary Tree Preorder Traversal",
    "link": "https://leetcode.com/problems/n-ary-tree-preorder-traversal/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_589.java)"
  },
  {
    "name": "Design In-Memory File System",
    "link": "https://leetcode.com/problems/design-in-memory-file-system/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_588.java)"
  },
  {
    "name": "Erect the Fence",
    "link": "https://leetcode.com/problems/erect-the-fence/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_587.java)"
  },
  {
    "name": "Delete Operation for Two Strings",
    "link": "https://leetcode.com/problems/delete-operation-for-two-strings/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_583.java)"
  },
  {
    "name": "Kill Process",
    "link": "https://leetcode.com/problems/kill-process/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_582.java)"
  },
  {
    "name": "Shortest Unsorted Continuous Subarray",
    "link": "https://leetcode.com/problems/shortest-unsorted-continuous-subarray/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_581.java)"
  },
  {
    "name": "Out of Boundary Paths",
    "link": "https://leetcode.com/problems/out-of-boundary-paths/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_576.java)"
  },
  {
    "name": "Distribute Candies",
    "link": "https://leetcode.com/problems/distribute-candies/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_575.java)"
  },
  {
    "name": "Squirrel Simulation",
    "link": "https://leetcode.com/problems/squirrel-simulation/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_573.java)"
  },
  {
    "name": "Subtree of Another Tree",
    "link": "https://leetcode.com/problems/subtree-of-another-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_572.java)"
  },
  {
    "name": "Maximum Vacation Days",
    "link": "https://leetcode.com/problems/maximum-vacation-days/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_568.java)"
  },
  {
    "name": "Permutation in String",
    "link": "https://leetcode.com/problems/permutation-in-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_567.java)"
  },
  {
    "name": "Reshape the Matrix",
    "link": "https://leetcode.com/problems/reshape-the-matrix/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_566.java)"
  },
  {
    "name": "Array Nesting",
    "link": "https://leetcode.com/problems/array-nesting/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_565.java)"
  },
  {
    "name": "Binary Tree Tilt",
    "link": "https://leetcode.com/problems/binary-tree-tilt/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_563.java)"
  },
  {
    "name": "Longest Line of Consecutive One in Matrix",
    "link": "https://leetcode.com/problems/longest-line-of-consecutive-one-in-matrix/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_562.java)"
  },
  {
    "name": "Array Partition I",
    "link": "https://leetcode.com/problems/array-partition-i/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_561.java)"
  },
  {
    "name": "Subarray Sum Equals K",
    "link": "https://leetcode.com/problems/subarray-sum-equals-k/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_560.java)"
  },
  {
    "name": "Maximum Depth of N-ary Tree",
    "link": "https://leetcode.com/problems/maximum-depth-of-n-ary-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_559.java)"
  },
  {
    "name": "Reverse Words in a String III",
    "link": "https://leetcode.com/problems/reverse-words-in-a-string-iii/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_557.java)"
  },
  {
    "name": "Next Greater Element III",
    "link": "https://leetcode.com/problems/parents-greater-element-iii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_556.java)"
  },
  {
    "name": "Split Concatenated Strings",
    "link": "https://leetcode.com/problems/split-concatenated-strings/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_555.java)"
  },
  {
    "name": "Brick Wall",
    "link": "https://leetcode.com/problems/brick-wall/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_554.java)"
  },
  {
    "name": "Optimal Division",
    "link": "https://leetcode.com/problems/optimal-division/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_553.java)"
  },
  {
    "name": "Student Attendance Record II",
    "link": "https://leetcode.com/problems/student-attendance-record-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_552.java)"
  },
  {
    "name": "Student Attendance Record I",
    "link": "https://leetcode.com/problems/student-attendance-record-i/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_551.java)"
  },
  {
    "name": "Binary Tree Longest Consecutive Sequence II",
    "link": "https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_549.java)"
  },
  {
    "name": "Split Array with Equal Sum",
    "link": "https://leetcode.com/problems/split-array-with-equal-sum/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_548.java)"
  },
  {
    "name": "Friend Circles",
    "link": "https://leetcode.com/problems/friend-circles/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_547.java)"
  },
  {
    "name": "Remove Boxes",
    "link": "https://leetcode.com/problems/remove-boxes/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_546.java)"
  },
  {
    "name": "Boundary of Binary Tree",
    "link": "https://leetcode.com/problems/boundary-of-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_545.java)"
  },
  {
    "name": "Output Contest Matches",
    "link": "https://leetcode.com/problems/output-a824-matches/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_544.java)"
  },
  {
    "name": "Diameter of Binary Tree",
    "link": "https://leetcode.com/problems/diameter-of-binary-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_543.java)"
  },
  {
    "name": "01 Matrix",
    "link": "https://leetcode.com/problems/01-matrix/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_542.java)"
  },
  {
    "name": "Reverse String II",
    "link": "https://leetcode.com/problems/reverse-string-ii/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_541.java)"
  },
  {
    "name": "Single Element in a Sorted Array",
    "link": "https://leetcode.com/problems/single-element-in-a-sorted-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_540.java)"
  },
  {
    "name": "Minimum Time Difference",
    "link": "https://leetcode.com/problems/minimum-time-difference/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_539.java)"
  },
  {
    "name": "Convert BST to Greater Tree",
    "link": "https://leetcode.com/problems/convert-bst-to-greater-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_538.java)"
  },
  {
    "name": "Complex Number Multiplication",
    "link": "https://leetcode.com/problems/complex-number-multiplication/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_537.java)"
  },
  {
    "name": "Construct Binary Tree from String",
    "link": "https://leetcode.com/problems/construct-binary-tree-from-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_536.java)"
  },
  {
    "name": "Encode and Decode TinyURL",
    "link": "https://leetcode.com/problems/encode-and-decode-tinyurl/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_535.java)"
  },
  {
    "name": "Lonely Pixel II",
    "link": "https://leetcode.com/problems/lonely-pixel-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_533.java)"
  },
  {
    "name": "K-diff Pairs in an Array",
    "link": "https://leetcode.com/problems/k-diff-pairs-in-an-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_532.java)"
  },
  {
    "name": "Lonely Pixel I",
    "link": "https://leetcode.com/problems/lonely-pixel-i/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_531.java)"
  },
  {
    "name": "Minimum Absolute Difference in BST",
    "link": "https://leetcode.com/problems/minimum-absolute-difference-in-bst/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_530.java)"
  },
  {
    "name": "Minesweeper",
    "link": "https://leetcode.com/problems/minesweeper/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_529.java)"
  },
  {
    "name": "Random Pick with Weight",
    "link": "https://leetcode.com/problems/random-pick-with-weight/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_528.java)"
  },
  {
    "name": "Word Abbreviation",
    "link": "https://leetcode.com/problems/word-abbreviation/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_527.java)"
  },
  {
    "name": "Beautiful Arrangement",
    "link": "https://leetcode.com/problems/beautiful-arrangement/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_526.java)"
  },
  {
    "name": "Contiguous Array",
    "link": "https://leetcode.com/problems/contiguous-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_525.java)"
  },
  {
    "name": "Longest Word in Dictionary through Deleting",
    "link": "https://leetcode.com/problems/longest-word-in-dictionary-through-deleting/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_524.java)"
  },
  {
    "name": "Continuous Subarray Sum",
    "link": "https://leetcode.com/problems/continuous-subarray-sum/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_523.java)"
  },
  {
    "name": "Longest Uncommon Subsequence II",
    "link": "https://leetcode.com/problems/longest-uncommon-subsequence-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_522.java)"
  },
  {
    "name": "Longest Uncommon Subsequence I",
    "link": "https://leetcode.com/problems/longest-uncommon-subsequence-i/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_521.java)"
  },
  {
    "name": "Detect Capital",
    "link": "https://leetcode.com/problems/detect-capital/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_520.java)"
  },
  {
    "name": "Coin Change 2",
    "link": "https://leetcode.com/problems/coin-change-2/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_518.java)"
  },
  {
    "name": "Super Washing Machines",
    "link": "https://leetcode.com/problems/super-washing-machines/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_517.java)"
  },
  {
    "name": "Longest Palindromic Subsequence",
    "link": "https://leetcode.com/problems/longest-palindromic-subsequence/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_516.java)"
  },
  {
    "name": "Find Largest Value in Each Tree Row",
    "link": "https://leetcode.com/problems/find-largest-value-in-each-tree-row/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_515.java)"
  },
  {
    "name": "Freedom Trail",
    "link": "https://leetcode.com/problems/freedom-trail/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_514.java)"
  },
  {
    "name": "Find Bottom Left Tree Value",
    "link": "https://leetcode.com/problems/find-bottom-left-tree-value/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_513.java)"
  },
  {
    "name": "Fibonacci Number",
    "link": "https://leetcode.com/problems/fibonacci-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_509.java)"
  },
  {
    "name": "Most Frequent Subtree Sum",
    "link": "https://leetcode.com/problems/most-frequent-subtree-sum/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_508.java)"
  },
  {
    "name": "Perfect Number",
    "link": "https://leetcode.com/problems/perfect-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_507.java)"
  },
  {
    "name": "Relative Ranks",
    "link": "https://leetcode.com/problems/relative-ranks/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_506.java)"
  },
  {
    "name": "The Maze II",
    "link": "https://leetcode.com/problems/the-maze-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_505.java)"
  },
  {
    "name": "Base 7",
    "link": "https://leetcode.com/problems/base-7/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_504.java)"
  },
  {
    "name": "Next Greater Element II",
    "link": "https://leetcode.com/problems/parents-greater-element-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_503.java)"
  },
  {
    "name": "IPO",
    "link": "https://leetcode.com/problems/ipo/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_502.java)"
  },
  {
    "name": "Find Mode in Binary Tree",
    "link": "https://leetcode.com/problems/find-mode-in-binary-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_501.java)"
  },
  {
    "name": "Keyboard Row",
    "link": "https://leetcode.com/problems/keyboard-row/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_500.java)"
  },
  {
    "name": "The Maze III",
    "link": "https://leetcode.com/problems/the-maze-iii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_499.java)"
  },
  {
    "name": "Next Greater Element I",
    "link": "https://leetcode.com/problems/parents-greater-element-i/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_496.java)"
  },
  {
    "name": "Diagonal Traverse",
    "link": "https://leetcode.com/problems/diagonal-traverse/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_498.java)"
  },
  {
    "name": "Teemo Attacking",
    "link": "https://leetcode.com/problems/teemo-attacking/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_495.java)"
  },
  {
    "name": "Target Sum",
    "link": "https://leetcode.com/problems/target-sum/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_494.java)"
  },
  {
    "name": "Reverse Pairs",
    "link": "https://leetcode.com/problems/reverse-pairs/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_493.java)"
  },
  {
    "name": "Construct the Rectangle",
    "link": "https://leetcode.com/problems/construct-the-rectangle/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_492.java)"
  },
  {
    "name": "Increasing Subsequences",
    "link": "https://leetcode.com/problems/increasing-subsequences/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_491.java)"
  },
  {
    "name": "The Maze",
    "link": "https://leetcode.com/problems/the-maze/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_490.java)"
  },
  {
    "name": "Zuma Game",
    "link": "https://leetcode.com/problems/zuma-game/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_488.java)"
  },
  {
    "name": "Max Consecutive Ones II",
    "link": "https://leetcode.com/problems/max-consecutive-ones-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_487.java)"
  },
  {
    "name": "Predict the Winner",
    "link": "https://leetcode.com/problems/predict-the-winner/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_486.java)"
  },
  {
    "name": "Max Consecutive Ones",
    "link": "https://leetcode.com/problems/max-consecutive-ones/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_485.java) [Javascript](https://github.com/fishercoder1534/Leetcode/blob/master/javascript/_485.js)"
  },
  {
    "name": "Find Permutation",
    "link": "https://leetcode.com/problems/find-permutation/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_484.java)"
  },
  {
    "name": "Smallest Good Base",
    "link": "https://leetcode.com/problems/smallest-good-base/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_483.java)"
  },
  {
    "name": "License Key Formatting",
    "link": "https://leetcode.com/problems/license-key-formatting/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_482.java)"
  },
  {
    "name": "Magical String",
    "link": "https://leetcode.com/problems/magical-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_481.java)"
  },
  {
    "name": "Sliding Window Median",
    "link": "https://leetcode.com/problems/sliding-window-median/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_480.java)"
  },
  {
    "name": "Largest Palindrome Product",
    "link": "https://leetcode.com/problems/largest-palindrome-product/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_479.java)"
  },
  {
    "name": "Total Hamming Distance",
    "link": "https://leetcode.com/problems/total-hamming-distance/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_477.java)"
  },
  {
    "name": "Generate Random Point in a Circle",
    "link": "https://leetcode.com/problems/generate-random-point-in-a-circle/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_478.java)"
  },
  {
    "name": "Number Complement",
    "link": "https://leetcode.com/problems/number-complement/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_476.java)"
  },
  {
    "name": "Heaters",
    "link": "https://leetcode.com/problems/heaters/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_475.java)"
  },
  {
    "name": "Ones and Zeroes",
    "link": "https://leetcode.com/problems/ones-and-zeroes/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_474.java)"
  },
  {
    "name": "Matchsticks to Square",
    "link": "https://leetcode.com/problems/matchsticks-to-square/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_473.java)"
  },
  {
    "name": "Concatenated Words",
    "link": "https://leetcode.com/problems/concatenated-words/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_472.java)"
  },
  {
    "name": "Encode String with Shortest Length",
    "link": "https://leetcode.com/problems/encode-string-with-shortest-length/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_471.java)"
  },
  {
    "name": "Convex Polygon",
    "link": "https://leetcode.com/problems/convex-polygon/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_469.java)"
  },
  {
    "name": "Validate IP Address",
    "link": "https://leetcode.com/problems/validate-ip-address/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_468.java)"
  },
  {
    "name": "Unique Substrings in Wraparound String",
    "link": "https://leetcode.com/problems/unique-substrings-in-wraparound-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_467.java)"
  },
  {
    "name": "Count The Repetitions",
    "link": "https://leetcode.com/problems/count-the-repetitions/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_466.java)"
  },
  {
    "name": "Optimal Account Balancing",
    "link": "https://leetcode.com/problems/optimal-account-balancing/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_465.java)"
  },
  {
    "name": "Can I Win",
    "link": "https://leetcode.com/problems/can-i-win/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_464.java)"
  },
  {
    "name": "Island Perimeter",
    "link": "https://leetcode.com/problems/island-perimeter/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_463.java)"
  },
  {
    "name": "Minimum Moves to Equal Array Elements II",
    "link": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_462.java)"
  },
  {
    "name": "Hamming Distance",
    "link": "https://leetcode.com/problems/hamming-distance/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_461.java), [C++](https://github.com/fishercoder1534/Leetcode/blob/master/cpp/_461.cpp)"
  },
  {
    "name": "LFU Cache",
    "link": "https://leetcode.com/problems/lfu-cache/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_460.java)"
  },
  {
    "name": "Repeated Substring Pattern",
    "link": "https://leetcode.com/problems/repeated-substring-pattern/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_459.java)"
  },
  {
    "name": "Poor Pigs",
    "link": "https://leetcode.com/problems/poor-pigs/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_458.java)"
  },
  {
    "name": "Circular Array Loop",
    "link": "https://leetcode.com/problems/circular-array-loop/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_457.java)"
  },
  {
    "name": "132 Pattern",
    "link": "https://leetcode.com/problems/132-pattern/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_456.java)"
  },
  {
    "name": "Assign Cookies",
    "link": "https://leetcode.com/problems/assign-cookies/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_455.java)"
  },
  {
    "name": "4Sum II",
    "link": "https://leetcode.com/problems/4sum-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_454.java)"
  },
  {
    "name": "Minimum Moves to Equal Array Elements",
    "link": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_453.java)"
  },
  {
    "name": "Minimum Number of Arrows to Burst Balloons",
    "link": "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_452.java)"
  },
  {
    "name": "Sort Characters By Frequency",
    "link": "https://leetcode.com/problems/sort-characters-by-frequency/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_451.java)"
  },
  {
    "name": "Delete Node in a BST",
    "link": "https://leetcode.com/problems/delete-node-in-a-bst/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_450.java)"
  },
  {
    "name": "Serialize and Deserialize BST",
    "link": "https://leetcode.com/problems/serialize-and-deserialize-bst/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_449.java)"
  },
  {
    "name": "Find All Numbers Disappeared in an Array",
    "link": "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_448.java)"
  },
  {
    "name": "Number of Boomerangs",
    "link": "https://leetcode.com/problems/number-of-boomerangs/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_447.java)"
  },
  {
    "name": "Arithmetic Slices II - Subsequence",
    "link": "https://leetcode.com/problems/arithmetic-slices-ii-subsequence/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_446.java)"
  },
  {
    "name": "Add Two Numbers II",
    "link": "https://leetcode.com/problems/add-two-numbers-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_445.java)"
  },
  {
    "name": "Sequence Reconstruction",
    "link": "https://leetcode.com/problems/sequence-reconstruction/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_444.java)"
  },
  {
    "name": "String Compression",
    "link": "https://leetcode.com/problems/string-compression/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_443.java)"
  },
  {
    "name": "Find All Duplicates in an Array",
    "link": "https://leetcode.com/problems/find-all-duplicates-in-an-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_442.java)"
  },
  {
    "name": "Arranging Coins",
    "link": "https://leetcode.com/problems/arrange-coins/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_441.java)"
  },
  {
    "name": "K-th Smallest in Lexicographical Order",
    "link": "https://leetcode.com/problems/k-th-smallest-in-lexicographical-order/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_440.java)"
  },
  {
    "name": "Ternary Expression Parser",
    "link": "https://leetcode.com/problems/ternary-expression-parser/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_439.java)"
  },
  {
    "name": "Find All Anagrams in a String",
    "link": "https://leetcode.com/problems/find-all-anagrams-in-a-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_438.java)"
  },
  {
    "name": "Path Sum III",
    "link": "https://leetcode.com/problems/path-sum-iii/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_437.java)"
  },
  {
    "name": "Find Right Interval",
    "link": "https://leetcode.com/problems/find-right-interval/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_436.java)"
  },
  {
    "name": "Non-overlapping Intervals",
    "link": "https://leetcode.com/problems/non-overlapping-intervals/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_435.java)"
  },
  {
    "name": "Number of Segments in a String",
    "link": "https://leetcode.com/problems/number-of-segments-in-a-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_434.java)"
  },
  {
    "name": "All O`one Data Structure",
    "link": "https://leetcode.com/problems/all-oone-data-structure/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_432.java)"
  },
  {
    "name": "Flatten a Multilevel Doubly Linked List",
    "link": "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_430.java)"
  },
  {
    "name": "N-ary Tree Level Order Traversal",
    "link": "https://leetcode.com/problems/n-ary-tree-level-order-traversal/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_429.java)"
  },
  {
    "name": "Word Squares",
    "link": "https://leetcode.com/problems/word-squares/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_425.java)"
  },
  {
    "name": "Longest Repeating Character Replacement",
    "link": "https://leetcode.com/problems/longest-repeating-character-replacement/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_424.java)"
  },
  {
    "name": "Reconstruct Original Digits from English",
    "link": "https://leetcode.com/problems/reconstruct-original-digits-from-english/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_423.java)"
  },
  {
    "name": "Valid Word Square",
    "link": "https://leetcode.com/problems/valid-word-square/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_422.java)"
  },
  {
    "name": "Maximum XOR of Two Numbers in an Array",
    "link": "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_421.java)"
  },
  {
    "name": "Strong Password Checker",
    "link": "https://leetcode.com/problems/strong-password-checker/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_420.java)"
  },
  {
    "name": "Battleships in a Board",
    "link": "https://leetcode.com/problems/battleships-in-a-board/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_419.java)"
  },
  {
    "name": "Sentence Screen Fitting",
    "link": "https://leetcode.com/problems/sentence-screen-fitting/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_418.java)"
  },
  {
    "name": "Pacific Atlantic Water Flow",
    "link": "https://leetcode.com/problems/pacific-atlantic-water-flow/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_417.java)"
  },
  {
    "name": "Partition Equal Subset Sum",
    "link": "https://leetcode.com/problems/partition-equal-subset-sum/",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_416.java), [C++](https://github.com/fishercoder1534/Leetcode/blob/master/cpp/_416.cpp)"
  },
  {
    "name": "Add Strings",
    "link": "https://leetcode.com/problems/add-strings/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_415.java)"
  },
  {
    "name": "Third Maximum Number",
    "link": "https://leetcode.com/problems/third-maximum-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_414.java)"
  },
  {
    "name": "Arithmetic Slices",
    "link": "https://leetcode.com/problems/arithmetic-slices/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_413.java)"
  },
  {
    "name": "Fizz Buzz",
    "link": "https://leetcode.com/problems/fizz-buzz/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_412.java)"
  },
  {
    "name": "Minimum Unique Word Abbreviation",
    "link": "https://leetcode.com/problems/minimum-unique-word-abbreviation/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_411.java)"
  },
  {
    "name": "Split Array Largest Sum",
    "link": "https://leetcode.com/problems/split-array-largest-sum/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_410.java)"
  },
  {
    "name": "Longest Palindrome",
    "link": "https://leetcode.com/problems/longest-palindrome/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_409.java)"
  },
  {
    "name": "Valid Word Abbreviation",
    "link": "https://leetcode.com/problems/valid-word-abbreviation/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_408.java)"
  },
  {
    "name": "Trapping Rain Water II",
    "link": "https://leetcode.com/problems/trapping-rain-water-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_407.java)"
  },
  {
    "name": "Queue Reconstruction by Height",
    "link": "https://leetcode.com/problems/queue-reconstruction-by-height/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_406.java)"
  },
  {
    "name": "Convert a Number to Hexadecimal",
    "link": "https://leetcode.com/problems/convert-a-number-to-hexadecimal/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_405.java)"
  },
  {
    "name": "Sum of Left Leaves",
    "link": "https://leetcode.com/problems/sum-of-left-leaves/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_404.java)"
  },
  {
    "name": "Frog Jump",
    "link": "https://leetcode.com/problems/frog-jump/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_403.java)"
  },
  {
    "name": "Remove K Digits",
    "link": "https://leetcode.com/problems/remove-k-digits/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_402.java)"
  },
  {
    "name": "Binary Watch",
    "link": "https://leetcode.com/problems/binary-watch/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_401.java)"
  },
  {
    "name": "Nth Digit",
    "link": "https://leetcode.com/problems/nth-digit/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_400.java)"
  },
  {
    "name": "Evaluate Division",
    "link": "https://leetcode.com/problems/evaluate-division/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_399.java)"
  },
  {
    "name": "Random Pick Index",
    "link": "https://leetcode.com/problems/random-pick-index/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_398.java)"
  },
  {
    "name": "Integer Replacement",
    "link": "https://leetcode.com/problems/integer-replacement/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_397.java)"
  },
  {
    "name": "Rotate Function",
    "link": "https://leetcode.com/problems/rotate-function/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_396.java)"
  },
  {
    "name": "Longest Substring with At Least K Repeating Characters",
    "link": "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_395.java)"
  },
  {
    "name": "Decode String",
    "link": "https://leetcode.com/problems/decode-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_394.java)"
  },
  {
    "name": "UTF-8 Validation",
    "link": "https://leetcode.com/problems/utf-8-validation/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_393.java)"
  },
  {
    "name": "Is Subsequence",
    "link": "https://leetcode.com/problems/is-subsequence/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_392.java)"
  },
  {
    "name": "Perfect Rectangle",
    "link": "https://leetcode.com/problems/perfect-rectangle/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_391.java)"
  },
  {
    "name": "Elimination Game",
    "link": "https://leetcode.com/problems/elimination-game/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_390.java)"
  },
  {
    "name": "Find the Difference",
    "link": "https://leetcode.com/problems/find-the-difference/",
    "difficulty": "",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_389.java)"
  },
  {
    "name": "Longest Absolute File Path",
    "link": "https://leetcode.com/problems/longest-absolute-file-path/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_388.java)"
  },
  {
    "name": "First Unique Character in a String",
    "link": "https://leetcode.com/problems/first-unique-character-in-a-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_387.java)"
  },
  {
    "name": "Lexicographical Numbers",
    "link": "https://leetcode.com/problems/lexicographical-numbers/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_386.java)"
  },
  {
    "name": "Mini Parser",
    "link": "https://leetcode.com/problems/mini-parser/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_385.java)"
  },
  {
    "name": "Shuffle an Array",
    "link": "https://leetcode.com/problems/shuffle-an-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_384.java)"
  },
  {
    "name": "Ransom Note",
    "link": "https://leetcode.com/problems/ransom-note/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_383.java)"
  },
  {
    "name": "Linked List Random Node",
    "link": "https://leetcode.com/problems/linked-list-random-node/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_382.java)"
  },
  {
    "name": "Insert Delete GetRandom O(1) - Duplicates allowed",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_381.java)"
  },
  {
    "name": "Insert Delete GetRandom O(1)",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_380.java)"
  },
  {
    "name": "Design Phone Directory",
    "link": "https://leetcode.com/problems/design-phone-directory/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_379.java)"
  },
  {
    "name": "Kth Smallest Element in a Sorted Matrix",
    "link": "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_378.java)"
  },
  {
    "name": "Combination Sum IV",
    "link": "https://leetcode.com/problems/combination-sum-iv/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_377.java)"
  },
  {
    "name": "Wiggle Subsequence",
    "link": "https://leetcode.com/problems/wiggle-subsequence/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_376.java)"
  },
  {
    "name": "Guess Number Higher or Lower II",
    "link": "https://leetcode.com/problems/guess-number-higher-or-lower-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_375.java)"
  },
  {
    "name": "Guess Number Higher or Lower",
    "link": "https://leetcode.com/problems/guess-number-higher-or-lower/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_374.java)"
  },
  {
    "name": "Find K Pairs with Smallest Sums",
    "link": "https://leetcode.com/problems/find-k-pairs-with-smallest-sums/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_373.java)"
  },
  {
    "name": "Super Pow",
    "link": "https://leetcode.com/problems/super-pow/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_372.java)"
  },
  {
    "name": "Sum of Two Integers",
    "link": "https://leetcode.com/problems/sum-of-two-integers/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_371.java)"
  },
  {
    "name": "Range Addition",
    "link": "https://leetcode.com/problems/range-addition/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_370.java)"
  },
  {
    "name": "Plus One Linked List",
    "link": "https://leetcode.com/problems/plus-one-linked-list/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_369.java)"
  },
  {
    "name": "Largest Divisible Subset",
    "link": "https://leetcode.com/problems/largest-divisible-subset/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_368.java)"
  },
  {
    "name": "Valid Perfect Square",
    "link": "https://leetcode.com/problems/valid-perfect-square/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_367.java)"
  },
  {
    "name": "Find Leaves of Binary Tree",
    "link": "https://leetcode.com/problems/find-leaves-of-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_366.java)"
  },
  {
    "name": "Water and Jug Problem",
    "link": "https://leetcode.com/problems/water-and-jug-problem/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_365.java)"
  },
  {
    "name": "Nested List Weight Sum II",
    "link": "https://leetcode.com/problems/nested-list-weight-sum-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_364.java)"
  },
  {
    "name": "Max Sum of Rectangle No Larger Than K",
    "link": "https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_363.java)"
  },
  {
    "name": "Design Hit Counter",
    "link": "https://leetcode.com/problems/design-hit-counter/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_362.java)"
  },
  {
    "name": "Bomb Enemy",
    "link": "https://leetcode.com/problems/bomb-enemy/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_361.java)"
  },
  {
    "name": "Sort Transformed Array",
    "link": "https://leetcode.com/problems/sort-transformed-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_360.java)"
  },
  {
    "name": "Logger Rate Limiter",
    "link": "https://leetcode.com/problems/logger-rate-limiter/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_359.java)"
  },
  {
    "name": "Rearrange String k Distance Apart",
    "link": "https://leetcode.com/problems/rearrange-string-k-distance-apart/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_358.java)"
  },
  {
    "name": "Count Numbers with Unique Digits",
    "link": "https://leetcode.com/problems/count-numbers-with-unique-digits/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_357.java)"
  },
  {
    "name": "Line Reflection",
    "link": "https://leetcode.com/problems/line-reflection/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_356.java)"
  },
  {
    "name": "Design Twitter",
    "link": "https://leetcode.com/problems/design-twitter/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_355.java)"
  },
  {
    "name": "Russian Doll Envelopes",
    "link": "https://leetcode.com/problems/russian-doll-envelopes/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_354.java)"
  },
  {
    "name": "Design Snake Game",
    "link": "https://leetcode.com/problems/design-snake-game/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_353.java)"
  },
  {
    "name": "Data Stream as Disjoint Intervals",
    "link": "https://leetcode.com/problems/data-stream-as-disjoint-intervals/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_352.java)"
  },
  {
    "name": "Android Unlock Patterns",
    "link": "https://leetcode.com/problems/android-unlock-patterns/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_351.java)"
  },
  {
    "name": "Intersection of Two Arrays II",
    "link": "https://leetcode.com/problems/intersection-of-two-arrays-ii/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_350.java)"
  },
  {
    "name": "Intersection of Two Arrays",
    "link": "https://leetcode.com/problems/intersection-of-two-arrays/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_349.java)"
  },
  {
    "name": "Design Tic-Tac-Toe",
    "link": "https://leetcode.com/problems/design-tic-tac-toe/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_348.java)"
  },
  {
    "name": "Top K Frequent Elements",
    "link": "https://leetcode.com/problems/top-k-frequent-elements/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_347.java)"
  },
  {
    "name": "Moving Average from Data Stream",
    "link": "https://leetcode.com/problems/moving-average-from-data-stream/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_346.java)"
  },
  {
    "name": "Reverse Vowels of a String",
    "link": "https://leetcode.com/problems/reverse-vowels-of-a-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_345.java)"
  },
  {
    "name": "Reverse String",
    "link": "https://leetcode.com/problems/reverse-string/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_344.java)"
  },
  {
    "name": "Integer Break",
    "link": "https://leetcode.com/problems/integer-break/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_343.java)"
  },
  {
    "name": "Power of Four",
    "link": "https://leetcode.com/problems/power-of-four/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_342.java)"
  },
  {
    "name": "Flatten Nested List Iterator",
    "link": "https://leetcode.com/problems/flatten-nested-list-iterator/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_341.java)"
  },
  {
    "name": "Longest Substring with At Most K Distinct Characters",
    "link": "https://leetcode.com/problems/longest-substring-with-at-most-k-distinct-characters/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_340.java)"
  },
  {
    "name": "Nested List Weight Sum",
    "link": "https://leetcode.com/problems/nested-list-weight-sum/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_339.java)"
  },
  {
    "name": "Counting Bits",
    "link": "https://leetcode.com/problems/counting-bits/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_338.java)"
  },
  {
    "name": "House Robber III",
    "link": "https://leetcode.com/problems/house-robber-iii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_337.java)"
  },
  {
    "name": "Palindrome Pairs",
    "link": "https://leetcode.com/problems/palindrome-pairs/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_336.java)"
  },
  {
    "name": "Self Crossing",
    "link": "https://leetcode.com/problems/self-crossing/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_335.java)"
  },
  {
    "name": "Increasing Triplet Subsequence",
    "link": "https://leetcode.com/problems/increasing-triplet-subsequence/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_334.java)"
  },
  {
    "name": "Largest BST Subtree",
    "link": "https://leetcode.com/problems/largest-bst-subtree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_333.java)"
  },
  {
    "name": "Reconstruct Itinerary",
    "link": "https://leetcode.com/problems/reconstruct-itinerary/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_332.java)"
  },
  {
    "name": "Verify Preorder Serialization of a Binary Tree",
    "link": "https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_331.java)"
  },
  {
    "name": "Patching Array",
    "link": "https://leetcode.com/problems/patching-array/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_330.java)"
  },
  {
    "name": "Longest Increasing Path in a Matrix",
    "link": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_329.java)"
  },
  {
    "name": "Odd Even Linked List",
    "link": "https://leetcode.com/problems/odd-even-linked-list/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_328.java)"
  },
  {
    "name": "Count of Range Sum",
    "link": "https://leetcode.com/problems/count-of-range-sum/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_327.java)"
  },
  {
    "name": "Power of Three",
    "link": "https://leetcode.com/problems/power-of-three/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_326.java)"
  },
  {
    "name": "Maximum Size Subarray Sum Equals k",
    "link": "https://leetcode.com/problems/maximum-size-subarray-sum-equals-k/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_325.java)"
  },
  {
    "name": "Wiggle Sort II",
    "link": "https://leetcode.com/problems/wiggle-sort-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_324.java)"
  },
  {
    "name": "Number of Connected Components in an Undirected Graph",
    "link": "https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_323.java)"
  },
  {
    "name": "Coin Change",
    "link": "https://leetcode.com/problems/coin-change/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_322.java)"
  },
  {
    "name": "Create Maximum Number",
    "link": "https://leetcode.com/problems/create-maximum-number/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_321.java)"
  },
  {
    "name": "Generalized Abbreviation",
    "link": "https://leetcode.com/problems/generalized-abbreviation/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_320.java)"
  },
  {
    "name": "Bulb Switcher",
    "link": "https://leetcode.com/problems/bulb-switcher/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_319.java)"
  },
  {
    "name": "Maximum Product of Word Lengths",
    "link": "https://leetcode.com/problems/maximum-product-of-word-lengths/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_318.java)"
  },
  {
    "name": "Shortest Distance from All Buildings",
    "link": "https://leetcode.com/problems/shortest-distance-from-all-buildings/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_317.java)"
  },
  {
    "name": "Remove Duplicate Letters",
    "link": "https://leetcode.com/problems/remove-duplicate-letters/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_316.java)"
  },
  {
    "name": "Count of Smaller Numbers After Self",
    "link": "https://leetcode.com/problems/count-of-smaller-numbers-after-self/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_315.java)"
  },
  {
    "name": "Binary Tree Vertical Order Traversal",
    "link": "https://leetcode.com/problems/binary-tree-vertical-order-traversal/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_314.java)"
  },
  {
    "name": "Super Ugly Number",
    "link": "https://leetcode.com/problems/super-ugly-number/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_313.java)"
  },
  {
    "name": "Burst Balloons",
    "link": "https://leetcode.com/problems/burst-balloons/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_312.java)"
  },
  {
    "name": "Sparse Matrix Multiplication",
    "link": "https://leetcode.com/problems/sparse-matrix-multiplication/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_311.java)"
  },
  {
    "name": "Minimum Height Trees",
    "link": "https://leetcode.com/problems/minimum-height-trees/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_310.java)"
  },
  {
    "name": "Best Time to Buy and Sell Stock with Cooldown",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-cooldown/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_309.java)"
  },
  {
    "name": "Range Sum Query 2D - Mutable",
    "link": "https://leetcode.com/problems/range-sum-query-2d-mutable/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_308.java)"
  },
  {
    "name": "Range Sum Query - Mutable",
    "link": "https://leetcode.com/problems/range-sum-query-mutable/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_307.java)"
  },
  {
    "name": "Additive Number",
    "link": "https://leetcode.com/problems/additive-number/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_306.java)"
  },
  {
    "name": "Number of Islands II",
    "link": "https://leetcode.com/problems/number-of-islands-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_305.java)"
  },
  {
    "name": "Range Sum Query 2D - Immutable",
    "link": "https://leetcode.com/problems/range-sum-query-2d-immutable/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_304.java)"
  },
  {
    "name": "Range Sum Query - Immutable",
    "link": "https://leetcode.com/problems/range-sum-query-immutable/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_303.java)"
  },
  {
    "name": "Smallest Rectangle Enclosing Black Pixels",
    "link": "https://leetcode.com/problems/smallest-rectangle-enclosing-black-pixels/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_302.java)"
  },
  {
    "name": "Remove Invalid Parentheses",
    "link": "https://leetcode.com/problems/remove-invalid-parentheses/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_301.java)"
  },
  {
    "name": "Longest Increasing Subsequence",
    "link": "https://leetcode.com/problems/longest-increasing-subsequence/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_300.java)"
  },
  {
    "name": "Bulls and Cows",
    "link": "https://leetcode.com/problems/bulls-and-cows/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_299.java)"
  },
  {
    "name": "Binary Tree Longest Consecutive Sequence",
    "link": "https://leetcode.com/problems/binary-tree-longest-consecutive-sequence/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_298.java)"
  },
  {
    "name": "Serialize and Deserialize Binary Tree",
    "link": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_297.java)"
  },
  {
    "name": "Best Meeting Point",
    "link": "https://leetcode.com/problems/best-meeting-point/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_296.java)"
  },
  {
    "name": "Find Median from Data Stream",
    "link": "https://leetcode.com/problems/find-median-from-data-stream/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_295.java)"
  },
  {
    "name": "Flip Game II",
    "link": "https://leetcode.com/problems/flip-game-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_294.java)"
  },
  {
    "name": "Flip Game",
    "link": "https://leetcode.com/problems/flip-game/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_293.java)"
  },
  {
    "name": "Nim Game",
    "link": "https://leetcode.com/problems/nim-game/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_292.java)"
  },
  {
    "name": "Word Pattern II",
    "link": "https://leetcode.com/problems/word-pattern-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_291.java)"
  },
  {
    "name": "Word Pattern",
    "link": "https://leetcode.com/problems/word-pattern/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_290.java)"
  },
  {
    "name": "Game of Life",
    "link": "https://leetcode.com/problems/game-of-life/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_289.java)"
  },
  {
    "name": "Unique Word Abbreviation",
    "link": "https://leetcode.com/problems/unique-word-abbreviation/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_288.java)"
  },
  {
    "name": "Find the Duplicate Number",
    "link": "https://leetcode.com/problems/find-the-duplicate-number/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_287.java)"
  },
  {
    "name": "Walls and Gates",
    "link": "https://leetcode.com/problems/walls-and-gates/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_286.java)"
  },
  {
    "name": "Inorder Successor In BST",
    "link": "https://leetcode.com/problems/inorder-successor-in-bst/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_285.java)"
  },
  {
    "name": "Peeking Iterator",
    "link": "https://leetcode.com/problems/peeking-iterator/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_284.java)"
  },
  {
    "name": "Move Zeroes",
    "link": "https://leetcode.com/problems/move-zeroes/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_283.java)"
  },
  {
    "name": "Expression Add Operators",
    "link": "https://leetcode.com/problems/expression-add-operators/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_282.java)"
  },
  {
    "name": "Zigzag Iterator",
    "link": "https://leetcode.com/problems/zigzag-iterator/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_281.java)"
  },
  {
    "name": "Wiggle Sort",
    "link": "https://leetcode.com/problems/wiggle-sort/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_280.java)"
  },
  {
    "name": "Perfect Squares",
    "link": "https://leetcode.com/problems/perfect-squares/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_279.java)"
  },
  {
    "name": "First Bad Version",
    "link": "https://leetcode.com/problems/first-bad-version/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_278.java)"
  },
  {
    "name": "Find the Celebrity",
    "link": "https://leetcode.com/problems/find-the-celebrity/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_277.java)"
  },
  {
    "name": "Paint Fence",
    "link": "https://leetcode.com/problems/paint-fence/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_276.java)"
  },
  {
    "name": "H-Index II",
    "link": "https://leetcode.com/problems/h-index-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_275.java)"
  },
  {
    "name": "H-Index",
    "link": "https://leetcode.com/problems/h-index/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_274.java)"
  },
  {
    "name": "Integer to English Words",
    "link": "https://leetcode.com/problems/integer-to-english-words/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_273.java)"
  },
  {
    "name": "Closest Binary Search Tree Value II",
    "link": "https://leetcode.com/problems/closest-binary-search-tree-value-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_272.java)"
  },
  {
    "name": "Encode and Decode Strings",
    "link": "https://leetcode.com/problems/encode-and-decode-strings/",
    "difficulty": "",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_271.java)"
  },
  {
    "name": "Closest Binary Search Tree Value",
    "link": "https://leetcode.com/problems/closest-binary-search-tree-value/",
    "difficulty": "",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_270.java)"
  },
  {
    "name": "Alien Dictionary",
    "link": "https://leetcode.com/problems/alien-dictionary/",
    "difficulty": "",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_269.java)"
  },
  {
    "name": "Missing Number",
    "link": "https://leetcode.com/problems/missing-number/",
    "difficulty": "",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_268.java)"
  },
  {
    "name": "Palindrome Permutation II",
    "link": "https://leetcode.com/problems/palindrome-permutation-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_267.java)"
  },
  {
    "name": "Palindrome Permutation",
    "link": "https://leetcode.com/problems/palindrome-permutation/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_266.java)"
  },
  {
    "name": "Paint House II",
    "link": "https://leetcode.com/problems/paint-house-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_265.java)"
  },
  {
    "name": "Ugly Number II",
    "link": "https://leetcode.com/problems/ugly-number-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_264.java)"
  },
  {
    "name": "Ugly Number",
    "link": "https://leetcode.com/problems/ugly-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_263.java)"
  },
  {
    "name": "Graph Valid Tree",
    "link": "https://leetcode.com/problems/graph-valid-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_261.java)"
  },
  {
    "name": "Single Number III",
    "link": "https://leetcode.com/problems/single-number-iii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_260.java)"
  },
  {
    "name": "3Sum Smaller",
    "link": "https://leetcode.com/problems/3sum-smaller/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_259.java)"
  },
  {
    "name": "Add Digits",
    "link": "https://leetcode.com/problems/add-digits/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_258.java)"
  },
  {
    "name": "Binary Tree Paths",
    "link": "https://leetcode.com/problems/binary-tree-paths/",
    "difficulty": "",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_257.java)"
  },
  {
    "name": "Paint House",
    "link": "https://leetcode.com/problems/paint-house/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_256.java)"
  },
  {
    "name": "Verify Preorder Sequence in Binary Search Tree",
    "link": "https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_255.java)"
  },
  {
    "name": "Factor Combinations",
    "link": "https://leetcode.com/problems/factor-combinations/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_254.java)"
  },
  {
    "name": "Meeting Rooms II",
    "link": "https://leetcode.com/problems/meeting-rooms-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_253.java)"
  },
  {
    "name": "Meeting Rooms",
    "link": "https://leetcode.com/problems/meeting-rooms/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_252.java)"
  },
  {
    "name": "Flatten 2D Vector",
    "link": "https://leetcode.com/problems/flatten-2d-vector/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_251.java)"
  },
  {
    "name": "Count Univalue Subtrees",
    "link": "https://leetcode.com/problems/count-univalue-subtrees/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_250.java)"
  },
  {
    "name": "Group Shifted Strings",
    "link": "https://leetcode.com/problems/group-shifted-strings/",
    "difficulty": "",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_249.java)"
  },
  {
    "name": "Strobogrammatic Number III",
    "link": "https://leetcode.com/problems/strobogrammatic-number-iii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_248.java)"
  },
  {
    "name": "Strobogrammatic Number II",
    "link": "https://leetcode.com/problems/strobogrammatic-number-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_247.java)"
  },
  {
    "name": "Strobogrammatic Number",
    "link": "https://leetcode.com/problems/strobogrammatic-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_246.java)"
  },
  {
    "name": "Shortest Word Distance III",
    "link": "https://leetcode.com/problems/shortest-word-distance-iii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_245.java)"
  },
  {
    "name": "Shortest Word Distance II",
    "link": "https://leetcode.com/problems/shortest-word-distance-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_244.java)"
  },
  {
    "name": "Shortest Word Distance",
    "link": "https://leetcode.com/problems/shortest-word-distance/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_243.java)"
  },
  {
    "name": "Valid Anagram",
    "link": "https://leetcode.com/problems/valid-anagram/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_242.java)"
  },
  {
    "name": "Different Ways to Add Parentheses",
    "link": "https://leetcode.com/problems/different-ways-to-add-parentheses/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_241.java)"
  },
  {
    "name": "Search a 2D Matrix II",
    "link": "https://leetcode.com/problems/search-a-2d-matrix-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_240.java)"
  },
  {
    "name": "Sliding Window Maximum",
    "link": "https://leetcode.com/problems/sliding-window-maximum/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_239.java)"
  },
  {
    "name": "Product of Array Except Self",
    "link": "https://leetcode.com/problems/product-of-array-except-self/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_238.java)"
  },
  {
    "name": "Delete Node in a Linked List",
    "link": "https://leetcode.com/problems/delete-node-in-a-linked-list/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_237.java)"
  },
  {
    "name": "Lowest Common Ancestor of a Binary Tree",
    "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_236.java)"
  },
  {
    "name": "Lowest Common Ancestor of a Binary Search Tree",
    "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_235.java)"
  },
  {
    "name": "Palindrome Linked List",
    "link": "https://leetcode.com/problems/palindrome-linked-list/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_234.java)"
  },
  {
    "name": "Number of Digit One",
    "link": "https://leetcode.com/problems/number-of-digit-one/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_233.java)"
  },
  {
    "name": "Implement Queue using Stacks",
    "link": "https://leetcode.com/problems/implement-queue-using-stacks/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_232.java)"
  },
  {
    "name": "Power of Two",
    "link": "https://leetcode.com/problems/power-of-two/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_231.java)"
  },
  {
    "name": "Kth Smallest Element in a BST",
    "link": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_230.java)"
  },
  {
    "name": "Majority Element II",
    "link": "https://leetcode.com/problems/majority-element-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_229.java)"
  },
  {
    "name": "Summary Ranges",
    "link": "https://leetcode.com/problems/summary-ranges/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_228.java)"
  },
  {
    "name": "Basic Calculator II",
    "link": "https://leetcode.com/problems/basic-calculator-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_227.java)"
  },
  {
    "name": "Invert Binary Tree",
    "link": "https://leetcode.com/problems/invert-binary-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_226.java)"
  },
  {
    "name": "Implement Stack using Queues",
    "link": "https://leetcode.com/problems/implement-stack-using-queues/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_225.java)"
  },
  {
    "name": "Basic Calculator",
    "link": "https://leetcode.com/problems/basic-calculator/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_224.java)"
  },
  {
    "name": "Rectangle Area",
    "link": "https://leetcode.com/problems/rectangle-area/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_223.java)"
  },
  {
    "name": "Count Complete Tree Nodes",
    "link": "https://leetcode.com/problems/count-complete-tree-nodes/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_222.java)"
  },
  {
    "name": "Maximal Square",
    "link": "https://leetcode.com/problems/maximal-square/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_221.java)"
  },
  {
    "name": "Contains Duplicate III",
    "link": "https://leetcode.com/problems/contains-duplicate-iii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_220.java)"
  },
  {
    "name": "Contains Duplicate II",
    "link": "https://leetcode.com/problems/contains-duplicate-ii/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_219.java)"
  },
  {
    "name": "The Skyline Problem",
    "link": "https://leetcode.com/problems/the-skyline-problem/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_218.java)"
  },
  {
    "name": "Contains Duplicate",
    "link": "https://leetcode.com/problems/contains-duplicate/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_217.java)"
  },
  {
    "name": "Combination Sum III",
    "link": "https://leetcode.com/problems/combination-sum-iii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_216.java)"
  },
  {
    "name": "Kth Largest Element in an Array",
    "link": "https://leetcode.com/problems/kth-largest-element-in-an-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_215.java)"
  },
  {
    "name": "Shortest Palindrome",
    "link": "https://leetcode.com/problems/shortest-palindrome/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_214.java)"
  },
  {
    "name": "House Robber II",
    "link": "https://leetcode.com/problems/house-robber-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_213.java)"
  },
  {
    "name": "Word Search II",
    "link": "https://leetcode.com/problems/word-search-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/WordSearchII.java)"
  },
  {
    "name": "Add and Search Word - Data structure design",
    "link": "https://leetcode.com/problems/add-and-search-word-data-structure-design/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_211.java)"
  },
  {
    "name": "Course Schedule II",
    "link": "https://leetcode.com/problems/course-schedule-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_210.java)"
  },
  {
    "name": "Minimum Size Subarray Sum",
    "link": "https://leetcode.com/problems/minimum-size-subarray-sum/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_209.java)"
  },
  {
    "name": "Implement Trie",
    "link": "https://leetcode.com/problems/implement-trie-prefix-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_208.java)"
  },
  {
    "name": "Course Schedule",
    "link": "https://leetcode.com/problems/course-schedule/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_207.java)"
  },
  {
    "name": "Reverse Linked List",
    "link": "https://leetcode.com/problems/reverse-linked-list/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_206.java)"
  },
  {
    "name": "Isomorphic Strings",
    "link": "https://leetcode.com/problems/isomorphic-strings/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_205.java)"
  },
  {
    "name": "Count Primes",
    "link": "https://leetcode.com/problems/count-primes/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_204.java)"
  },
  {
    "name": "Remove Linked List Elements",
    "link": "https://leetcode.com/problems/remove-linked-list-elements/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_203.java)"
  },
  {
    "name": "Happy Number",
    "link": "https://leetcode.com/problems/happy-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_202.java)"
  },
  {
    "name": "Bitwise AND of Numbers Range",
    "link": "https://leetcode.com/problems/bitwise-and-of-numbers-range/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_201.java)"
  },
  {
    "name": "Number of Islands",
    "link": "https://leetcode.com/problems/number-of-islands/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_200.java)"
  },
  {
    "name": "Binary Tree Right Side View",
    "link": "https://leetcode.com/problems/binary-tree-right-side-view/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_199.java)"
  },
  {
    "name": "House Robber",
    "link": "https://leetcode.com/problems/house-robber/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_198.java)"
  },
  {
    "name": "Number of 1 Bits",
    "link": "https://leetcode.com/problems/number-of-1-bits/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_191.java)"
  },
  {
    "name": "Reverse Bits",
    "link": "https://leetcode.com/problems/reverse-bits/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_190.java)"
  },
  {
    "name": "Rotate Array",
    "link": "https://leetcode.com/problems/rotate-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_189.java)"
  },
  {
    "name": "Best Time to Buy and Sell Stock IV",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_188.java)"
  },
  {
    "name": "Repeated DNA Sequences",
    "link": "https://leetcode.com/problems/repeated-dna-sequences/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_187.java)"
  },
  {
    "name": "Reverse Words in a String II",
    "link": "https://leetcode.com/problems/reverse-words-in-a-string-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_186.java)"
  },
  {
    "name": "Largest Number",
    "link": "https://leetcode.com/problems/largest-number/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_179.java)"
  },
  {
    "name": "Dungeon Game",
    "link": "https://leetcode.com/problems/dungeon-game/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_174.java)"
  },
  {
    "name": "Binary Search Tree Iterator",
    "link": "https://leetcode.com/problems/binary-search-tree-iterator/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/https://github.com/fishercoder1534/Leetcode/blob/blmaster/MEDIUM/src/medium/_173.java)"
  },
  {
    "name": "Factorial Trailing Zeroes",
    "link": "https://leetcode.com/problems/factorial-trailing-zeroes/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_172.java)"
  },
  {
    "name": "Excel Sheet Column Number",
    "link": "https://leetcode.com/problems/excel-sheet-column-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_171.java)"
  },
  {
    "name": "Two Sum III - Data structure design",
    "link": "https://leetcode.com/problems/two-sum-iii-data-structure-design/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_170.java)"
  },
  {
    "name": "Majority Element",
    "link": "https://leetcode.com/problems/majority-element/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_169.java)"
  },
  {
    "name": "Excel Sheet Column Title",
    "link": "https://leetcode.com/problems/excel-sheet-column-title/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_168.java)"
  },
  {
    "name": "Two Sum II - Input array is sorted",
    "link": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_167.java), [Javascript](https://github.com/fishercoder1534/Leetcode/blob/master/javascript/_167.js)"
  },
  {
    "name": "Fraction to Recurring Decimal",
    "link": "https://leetcode.com/problems/fraction-to-recurring-decimal/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_166.java)"
  },
  {
    "name": "Compare Version Numbers",
    "link": "https://leetcode.com/problems/compare-version-numbers/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_165.java)"
  },
  {
    "name": "Maximum Gap",
    "link": "https://leetcode.com/problems/maximum-gap/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_164.java)"
  },
  {
    "name": "Missing Ranges",
    "link": "https://leetcode.com/problems/missing-ranges/",
    "difficulty": "",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_163.java)"
  },
  {
    "name": "Find Peak Element",
    "link": "https://leetcode.com/problems/find-peak-element/",
    "difficulty": "Binary Search",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_162.java)"
  },
  {
    "name": "One Edit Distance",
    "link": "https://leetcode.com/problems/one-edit-distance/",
    "difficulty": "",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_161.java)"
  },
  {
    "name": "Intersection of Two Linked Lists",
    "link": "https://leetcode.com/problems/intersection-of-two-linked-lists/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_160.java)"
  },
  {
    "name": "Longest Substring with At Most Two Distinct Characters",
    "link": "https://leetcode.com/problems/longest-substring-with-at-most-two-distinct-characters/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_159.java)"
  },
  {
    "name": "Read N Characters Given Read4 II - Call multiple times",
    "link": "https://leetcode.com/problems/read-n-characters-given-read4-ii-call-multiple-times/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_158.java)"
  },
  {
    "name": "Read N Characters Given Read4",
    "link": "https://leetcode.com/problems/read-n-characters-given-read4/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_157.java)"
  },
  {
    "name": "Binary Tree Upside Down",
    "link": "https://leetcode.com/problems/binary-tree-upside-down/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_156.java)"
  },
  {
    "name": "Min Stack",
    "link": "https://leetcode.com/problems/min-stack/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_155.java)"
  },
  {
    "name": "Find Minimum in Rotated Sorted Array II",
    "link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_154.java)"
  },
  {
    "name": "Find Minimum in Rotated Sorted Array",
    "link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_153.java)"
  },
  {
    "name": "Maximum Product Subarray",
    "link": "https://leetcode.com/problems/maximum-product-subarray/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_152.java)"
  },
  {
    "name": "Reverse Words in a String",
    "link": "https://leetcode.com/problems/reverse-words-in-a-string/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_151.java)"
  },
  {
    "name": "Evaluate Reverse Polish Notation",
    "link": "https://leetcode.com/problems/evaluate-reverse-polish-notation/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_150.java)"
  },
  {
    "name": "Max Points on a Line",
    "link": "https://leetcode.com/problems/max-points-on-a-line/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_149.java)"
  },
  {
    "name": "Sort List",
    "link": "https://leetcode.com/problems/sort-list/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_148.java)"
  },
  {
    "name": "Insertion Sort List",
    "link": "https://leetcode.com/problems/insertion-sort-list/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_147.java)"
  },
  {
    "name": "LRU Cache",
    "link": "https://leetcode.com/problems/lru-cache/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_146.java)"
  },
  {
    "name": "Binary Tree Postorder Traversal",
    "link": "https://leetcode.com/problems/binary-tree-postorder-traversal/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_145.java)"
  },
  {
    "name": "Binary Tree Preorder Traversal",
    "link": "https://leetcode.com/problems/binary-tree-preorder-traversal/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_144.java)"
  },
  {
    "name": "Reorder List",
    "link": "https://leetcode.com/problems/reorder-list/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_143.java)"
  },
  {
    "name": "Linked List Cycle II",
    "link": "https://leetcode.com/problems/linked-list-cycle-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_142.java)"
  },
  {
    "name": "Linked List Cycle",
    "link": "https://leetcode.com/problems/linked-list-cycle/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_141.java)"
  },
  {
    "name": "Word Break II",
    "link": "https://leetcode.com/problems/word-break-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_140.java)"
  },
  {
    "name": "Word Break",
    "link": "https://leetcode.com/problems/word-break/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_139.java)"
  },
  {
    "name": "Copy List with Random Pointer",
    "link": "https://leetcode.com/problems/copy-list-with-random-pointer/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_138.java)"
  },
  {
    "name": "Single Number II",
    "link": "https://leetcode.com/problems/single-number-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_137.java)"
  },
  {
    "name": "Single Number",
    "link": "https://leetcode.com/problems/single-number/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_136.java)"
  },
  {
    "name": "Candy",
    "link": "https://leetcode.com/problems/candy/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_135.java)"
  },
  {
    "name": "Gas Station",
    "link": "https://leetcode.com/problems/gas-station/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_134.java)"
  },
  {
    "name": "Clone Graph",
    "link": "https://leetcode.com/problems/clone-graph/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_133.java)"
  },
  {
    "name": "Palindrome Partitioning II",
    "link": "https://leetcode.com/problems/palindrome-partitioning-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_132.java)"
  },
  {
    "name": "Palindrome Partitioning",
    "link": "https://leetcode.com/problems/palindrome-partitioning/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_131.java)"
  },
  {
    "name": "Surrounded Regions",
    "link": "https://leetcode.com/problems/surrounded-regions/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_130.java)"
  },
  {
    "name": "Sum Root to Leaf Numbers",
    "link": "https://leetcode.com/problems/sum-root-to-leaf-numbers/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_129.java)"
  },
  {
    "name": "Longest Consecutive Sequence",
    "link": "https://leetcode.com/problems/longest-consecutive-sequence/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_128.java)"
  },
  {
    "name": "Word Ladder",
    "link": "https://leetcode.com/problems/word-ladder/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_127.java)"
  },
  {
    "name": "Word Ladder II",
    "link": "https://leetcode.com/problems/word-ladder-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_126.java)"
  },
  {
    "name": "Valid Palindrome",
    "link": "https://leetcode.com/problems/valid-palindrome/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_125.java)"
  },
  {
    "name": "Binary Tree Maximum Path Sum",
    "link": "https://leetcode.com/problems/binary-tree-maximum-path-sum/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_124.java)"
  },
  {
    "name": "Best Time to Buy and Sell Stock III",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_123.java)"
  },
  {
    "name": "Best Time to Buy and Sell Stock II",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_122.java)"
  },
  {
    "name": "Best Time to Buy and Sell Stock",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_121.java)"
  },
  {
    "name": "Triangle",
    "link": "https://leetcode.com/problems/triangle/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_120.java)"
  },
  {
    "name": "Pascal's Triangle II",
    "link": "https://leetcode.com/problems/pascals-triangle-ii/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_119.java)"
  },
  {
    "name": "Pascal's Triangle",
    "link": "https://leetcode.com/problems/pascals-triangle/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_118.java)"
  },
  {
    "name": "Populating Next Right Pointers in Each Node II",
    "link": "https://leetcode.com/problems/populating-parents-right-pointers-in-each-node-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_117.java)"
  },
  {
    "name": "Populating Next Right Pointers in Each Node",
    "link": "https://leetcode.com/problems/populating-parents-right-pointers-in-each-node/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_116.java)"
  },
  {
    "name": "Distinct Subsequences",
    "link": "https://leetcode.com/problems/distinct-subsequences/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_115.java)"
  },
  {
    "name": "Flatten Binary Tree to Linked List",
    "link": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_114.java)"
  },
  {
    "name": "Path Sum II",
    "link": "https://leetcode.com/problems/path-sum-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_113.java)"
  },
  {
    "name": "Path Sum",
    "link": "https://leetcode.com/problems/path-sum/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_112.java)"
  },
  {
    "name": "Minimum Depth of Binary Tree",
    "link": "https://leetcode.com/problems/minimum-depth-of-binary-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_111.java)"
  },
  {
    "name": "Balanced Binary Tree",
    "link": "https://leetcode.com/problems/balanced-binary-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_110.java)"
  },
  {
    "name": "Convert Sorted List to Binary Search Tree",
    "link": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_109.java)"
  },
  {
    "name": "Convert Sorted Array to Binary Search Tree",
    "link": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_108.java)"
  },
  {
    "name": "Binary Tree Level Order Traversal II",
    "link": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_107.java)"
  },
  {
    "name": "Construct Binary Tree from Inorder and Postorder Traversal",
    "link": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_106.java)"
  },
  {
    "name": "Construct Binary Tree from Preorder and Inorder Traversal",
    "link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_105.java)"
  },
  {
    "name": "Maximum Depth of Binary Tree",
    "link": "https://leetcode.com/problems/maximum-depth-of-binary-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_104.java)"
  },
  {
    "name": "Binary Tree Zigzag Level Order Traversal",
    "link": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_103.java)"
  },
  {
    "name": "Binary Tree Level Order Traversal",
    "link": "https://leetcode.com/problems/binary-tree-level-order-traversal/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_102.java)"
  },
  {
    "name": "Symmetric Tree",
    "link": "https://leetcode.com/problems/symmetric-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_101.java)"
  },
  {
    "name": "Same Tree",
    "link": "https://leetcode.com/problems/same-tree/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_100.java)"
  },
  {
    "name": "Recover Binary Search Tree",
    "link": "https://leetcode.com/problems/recover-binary-search-tree/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_99.java)"
  },
  {
    "name": "Validate Binary Search Tree",
    "link": "https://leetcode.com/problems/validate-binary-search-tree/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_98.java)"
  },
  {
    "name": "Interleaving String",
    "link": "https://leetcode.com/problems/interleaving-string/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_97.java)"
  },
  {
    "name": "Unique Binary Search Trees",
    "link": "https://leetcode.com/problems/unique-binary-search-trees/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_96.java)"
  },
  {
    "name": "Unique Binary Search Trees II",
    "link": "https://leetcode.com/problems/unique-binary-search-trees-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_95.java)"
  },
  {
    "name": "Binary Tree Inorder Traversal",
    "link": "https://leetcode.com/problems/binary-tree-inorder-traversal/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_94.java)"
  },
  {
    "name": "Restore IP Addresses",
    "link": "https://leetcode.com/problems/restore-ip-addresses/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_93.java)"
  },
  {
    "name": "Reverse Linked List II",
    "link": "https://leetcode.com/problems/reverse-linked-list-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_92.java)"
  },
  {
    "name": "Decode Ways",
    "link": "https://leetcode.com/problems/decode-ways/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_91.java)"
  },
  {
    "name": "Subsets II",
    "link": "https://leetcode.com/problems/subsets-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_90.java)"
  },
  {
    "name": "Gray Code",
    "link": "https://leetcode.com/problems/gray-code/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_89.java)"
  },
  {
    "name": "Merge Sorted Array",
    "link": "https://leetcode.com/problems/merge-sorted-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_88.java)"
  },
  {
    "name": "Scramble String",
    "link": "https://leetcode.com/problems/scramble-string/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_87.java)"
  },
  {
    "name": "Partition List",
    "link": "https://leetcode.com/problems/partition-list/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_86.java)"
  },
  {
    "name": "Maximal Rectangle",
    "link": "https://leetcode.com/problems/maximal-rectangle/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_85.java)"
  },
  {
    "name": "Largest Rectangle in Histogram",
    "link": "https://leetcode.com/problems/largest-rectangle-in-histogram/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_84.java)"
  },
  {
    "name": "Remove Duplicates from Sorted List",
    "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_83.java)"
  },
  {
    "name": "Remove Duplicates from Sorted List II",
    "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_82.java)"
  },
  {
    "name": "Search in Rotated Sorted Array II",
    "link": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_81.java)"
  },
  {
    "name": "Remove Duplicates from Sorted Array II",
    "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_80.java)"
  },
  {
    "name": "Word Search",
    "link": "https://leetcode.com/problems/word-search/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_79.java)"
  },
  {
    "name": "Subsets",
    "link": "https://leetcode.com/problems/subsets/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_78.java)"
  },
  {
    "name": "Combinations",
    "link": "https://leetcode.com/problems/combinations/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_77.java)"
  },
  {
    "name": "Minimum Window Substring",
    "link": "https://leetcode.com/problems/minimum-window-substring/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_76.java)"
  },
  {
    "name": "Sort Colors",
    "link": "https://leetcode.com/problems/sort-colors/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_75.java)"
  },
  {
    "name": "Search a 2D Matrix",
    "link": "https://leetcode.com/problems/search-a-2d-matrix/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_74.java)"
  },
  {
    "name": "Set Matrix Zeroes",
    "link": "https://leetcode.com/problems/set-matrix-zeroes/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_73.java)"
  },
  {
    "name": "Edit Distance",
    "link": "https://leetcode.com/problems/edit-distance/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_72.java)"
  },
  {
    "name": "Simplify Path",
    "link": "https://leetcode.com/problems/simplify-path/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_71.java)"
  },
  {
    "name": "Climbing Stairs",
    "link": "https://leetcode.com/problems/climbing-stairs/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_70.java)"
  },
  {
    "name": "Sqrt(x)",
    "link": "https://leetcode.com/problems/sqrtx/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_69.java)"
  },
  {
    "name": "Text Justification",
    "link": "https://leetcode.com/problems/text-justification/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_68.java)"
  },
  {
    "name": "Add Binary",
    "link": "https://leetcode.com/problems/add-binary/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_67.java)"
  },
  {
    "name": "Plus One",
    "link": "https://leetcode.com/problems/plus-one/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_66.java)"
  },
  {
    "name": "Valid Number",
    "link": "https://leetcode.com/problems/valid-number/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_65.java)"
  },
  {
    "name": "Minimum Path Sum",
    "link": "https://leetcode.com/problems/minimum-path-sum/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_64.java)"
  },
  {
    "name": "Unique Paths II",
    "link": "https://leetcode.com/problems/unique-paths-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_63.java)"
  },
  {
    "name": "Unique Paths",
    "link": "https://leetcode.com/problems/unique-paths/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_62.java)"
  },
  {
    "name": "Rotate List",
    "link": "https://leetcode.com/problems/rotate-list/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_61.java)"
  },
  {
    "name": "Permutation Sequence",
    "link": "https://leetcode.com/problems/permutation-sequence/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_60.java)"
  },
  {
    "name": "Spiral Matrix II",
    "link": "https://leetcode.com/problems/spiral-matrix-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_59.java)"
  },
  {
    "name": "Length of Last Word",
    "link": "https://leetcode.com/problems/length-of-last-word/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_58.java)"
  },
  {
    "name": "Insert Intervals",
    "link": "https://leetcode.com/problems/insert-interval/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_57.java)"
  },
  {
    "name": "Merge Intervals",
    "link": "https://leetcode.com/problems/merge-intervals/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_56.java)"
  },
  {
    "name": "Jump Game",
    "link": "https://leetcode.com/problems/jump-game/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_55.java)"
  },
  {
    "name": "Spiral Matrix",
    "link": "https://leetcode.com/problems/spiral-matrix/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_54.java)"
  },
  {
    "name": "Maximum Subarray",
    "link": "https://leetcode.com/problems/maximum-subarray/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_53.java)"
  },
  {
    "name": "N-Queens II",
    "link": "https://leetcode.com/problems/n-queens-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_52.java)"
  },
  {
    "name": "N-Queens",
    "link": "https://leetcode.com/problems/n-queens/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_51.java)"
  },
  {
    "name": "Pow(x, n)",
    "link": "https://leetcode.com/problems/powx-n/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_50.java)"
  },
  {
    "name": "Group Anagrams",
    "link": "https://leetcode.com/problems/group-anagrams/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_49.java)"
  },
  {
    "name": "Rotate Image",
    "link": "https://leetcode.com/problems/rotate-image/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_48.java)"
  },
  {
    "name": "Permutations II",
    "link": "https://leetcode.com/problems/permutations-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_47.java)"
  },
  {
    "name": "Permutations",
    "link": "https://leetcode.com/problems/permutations/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_46.java)"
  },
  {
    "name": "Jump Game II",
    "link": "https://leetcode.com/problems/jump-game-ii/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_45.java)"
  },
  {
    "name": "Wildcard Matching",
    "link": "https://leetcode.com/problems/wildcard-matching/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_44.java)"
  },
  {
    "name": "Multiply Strings",
    "link": "https://leetcode.com/problems/multiply-strings/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_43.java)"
  },
  {
    "name": "Trapping Rain Water",
    "link": "https://leetcode.com/problems/trapping-rain-water/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_42.java)"
  },
  {
    "name": "First Missing Positive",
    "link": "https://leetcode.com/problems/first-missing-positive/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_41.java)"
  },
  {
    "name": "Combination Sum II",
    "link": "https://leetcode.com/problems/combination-sum-ii/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_40.java)"
  },
  {
    "name": "Combination Sum",
    "link": "https://leetcode.com/problems/combination-sum/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_39.java)"
  },
  {
    "name": "Count and Say",
    "link": "https://leetcode.com/problems/count-and-say/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_38.java)"
  },
  {
    "name": "Sudoku Solver",
    "link": "https://leetcode.com/problems/sudoku-solver/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_37.java)"
  },
  {
    "name": "Valid Sudoku",
    "link": "https://leetcode.com/problems/valid-sudoku/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_36.java), [Javascript](./src/javascript/_36.js)"
  },
  {
    "name": "Search Insert Position",
    "link": "https://leetcode.com/problems/search-insert-position/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_35.java)"
  },
  {
    "name": "Search for a Range",
    "link": "https://leetcode.com/problems/search-for-a-range/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_34.java)"
  },
  {
    "name": "Search in Rotated Sorted Array",
    "link": "https://leetcode.com/problems/search-in-rotated-sorted-array/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_33.java)"
  },
  {
    "name": "Longest Valid Parentheses",
    "link": "https://leetcode.com/problems/longest-valid-parentheses/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_32.java)"
  },
  {
    "name": "Next Permutation",
    "link": "https://leetcode.com/problems/parents-permutation",
    "difficulty": "Medium",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_31.java), [C++](https://github.com/fishercoder1534/Leetcode/blob/master/cpp/_31.cpp)"
  },
  {
    "name": "Substring with Concatenation of All Words",
    "link": "https://leetcode.com/problems/substring-with-concatenation-of-all-words/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_30.java)"
  },
  {
    "name": "Divide Two Integers",
    "link": "https://leetcode.com/problems/divide-two-integers/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_29.java)"
  },
  {
    "name": "Implement strStr()",
    "link": "https://leetcode.com/problems/implement-strstr/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_28.java)"
  },
  {
    "name": "Remove Element",
    "link": "https://leetcode.com/problems/remove-element/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_27.java)"
  },
  {
    "name": "Remove Duplicates from Sorted Array",
    "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_26.java)"
  },
  {
    "name": "Reverse Nodes in k-Group",
    "link": "https://leetcode.com/problems/reverse-nodes-in-k-group/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_25.java)"
  },
  {
    "name": "Swap Nodes in Pairs",
    "link": "https://leetcode.com/problems/swap-nodes-in-pairs/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_24.java)"
  },
  {
    "name": "Merge k Sorted Lists",
    "link": "https://leetcode.com/problems/merge-k-sorted-lists/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_23.java)"
  },
  {
    "name": "Generate Parentheses",
    "link": "https://leetcode.com/problems/generate-parentheses/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_22.java)"
  },
  {
    "name": "Merge Two Sorted Lists",
    "link": "https://leetcode.com/problems/merge-two-sorted-lists/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_21.java)"
  },
  {
    "name": "Valid Parentheses",
    "link": "https://leetcode.com/problems/valid-parentheses/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_20.java)"
  },
  {
    "name": "Remove Nth Node From End of List",
    "link": "https://leetcode.com/problems/remove-nth-node-from-end-of-list/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_19.java)"
  },
  {
    "name": "4 Sum",
    "link": "https://leetcode.com/problems/4sum/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_18.java)"
  },
  {
    "name": "Letter Combinations of a Phone Number",
    "link": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_17.java)"
  },
  {
    "name": "3Sum Closest",
    "link": "https://leetcode.com/problems/3sum-closest/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_16.java)"
  },
  {
    "name": "3Sum",
    "link": "https://leetcode.com/problems/3sum/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_15.java), [C++](https://github.com/fishercoder1534/Leetcode/blob/master/cpp/_15.cpp)"
  },
  {
    "name": "Longest Common Prefix",
    "link": "https://leetcode.com/problems/longest-common-prefix/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_14.java)"
  },
  {
    "name": "Roman to Integer",
    "link": "https://leetcode.com/problems/roman-to-integer",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_13.java)"
  },
  {
    "name": "Integer to Roman",
    "link": "https://leetcode.com/problems/integer-to-roman/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_12.java)"
  },
  {
    "name": "Container With Most Water",
    "link": "https://leetcode.com/problems/container-with-most-water/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_11.java)"
  },
  {
    "name": "Regular Expression Matching",
    "link": "https://leetcode.com/problems/regular-expression-matching/",
    "difficulty": "Hard",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_10.java),  [Javascript](https://github.com/fishercoder1534/Leetcode/blob/master/javascript/_10.js)"
  },
  {
    "name": "Palindrome Number",
    "link": "https://leetcode.com/problems/palindrome-number/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_9.java), [C++](https://github.com/fishercoder1534/Leetcode/blob/master/cpp/_9.cpp)"
  },
  {
    "name": "String to Integer (atoi)",
    "link": "https://leetcode.com/problems/string-to-integer-atoi/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_8.java)"
  },
  {
    "name": "Reverse Integer",
    "link": "https://leetcode.com/problems/reverse-integer/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_7.java), [C++](https://github.com/fishercoder1534/Leetcode/blob/master/cpp/_7.cpp)"
  },
  {
    "name": "ZigZag Conversion",
    "link": "https://leetcode.com/problems/zigzag-conversion/",
    "difficulty": "Easy",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_6.java)"
  },
  {
    "name": "Longest Palindromic Substring",
    "link": "https://leetcode.com/problems/longest-palindromic-substring/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_5.java)"
  },
  {
    "name": "Median of Two Sorted Arrays",
    "link": "https://leetcode.com/problems/median-of-two-sorted-arrays/",
    "difficulty": "Hard",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_4.java), [C++](https://github.com/fishercoder1534/Leetcode/blob/master/cpp/_4.cpp)"
  },
  {
    "name": "Longest Substring Without Repeating Characters",
    "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_3.java), [C++](https://github.com/fishercoder1534/Leetcode/blob/master/cpp/_3.cpp)"
  },
  {
    "name": "Add Two Numbers",
    "link": "https://leetcode.com/problems/add-two-numbers/",
    "difficulty": "Medium",
    "solution": "[Solution](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_2.java)"
  },
  {
    "name": "Two Sum",
    "link": "https://leetcode.com/problems/two-sum/",
    "difficulty": "Easy",
    "solution": "[Java](https://github.com/fishercoder1534/Leetcode/blob/master/src/main/java/com/fishercoder/solutions/_1.java), [C++](https://github.com/fishercoder1534/Leetcode/blob/master/cpp/_1.cpp), [Javascript](https://github.com/fishercoder1534/Leetcode/blob/master/javascript/_1.js)"
  }
]